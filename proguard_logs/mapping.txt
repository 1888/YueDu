android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void setRetainInstance(boolean) -> b
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.u:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.w:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.x:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> android.support.v4.app.y:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.z:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.aa:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ab:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ac:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.ad:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ae:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.af:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.ag:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ah:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> a
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.ai:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.aj:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ak:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.al:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.am:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.an:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.ao:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.ap:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.aq:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.ar:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.as:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.content.LocalBroadcastManager -> android.support.v4.a.c:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.a.d:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.a.e:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.a.f:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.c.c:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void evictAll() -> a
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.d:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.z:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.aa:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ab:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ac:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ad:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ae:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.af:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ag:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ah:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ai:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.aj:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ak:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.al:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.am:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.an:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ao:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ap:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.aq:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ar:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.as:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.at:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.au:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean hasOpaqueBackground(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    boolean isEdgeTouched(int) -> d
    boolean isEdgeTouched(int,int) -> c
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> d
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> e
    int getEdgesTouched(int,int) -> f
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.loopj.android.http.AsyncHttpClient -> com.a.a.a.a:
    int maxConnections -> a
    int socketTimeout -> b
    org.apache.http.impl.client.DefaultHttpClient httpClient -> c
    org.apache.http.protocol.HttpContext httpContext -> d
    java.util.concurrent.ThreadPoolExecutor threadPool -> e
    java.util.Map requestMap -> f
    java.util.Map clientHeaderMap -> g
    void get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler,android.content.Context) -> a
    java.lang.String getUrlWithQueryString(java.lang.String,com.loopj.android.http.RequestParams) -> a
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> a
com.loopj.android.http.AsyncHttpClient$1 -> com.a.a.a.b:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.a.a.a.c:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.a.a.a.d:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.loopj.android.http.AsyncHttpRequest -> com.a.a.a.e:
    org.apache.http.impl.client.AbstractHttpClient client -> a
    org.apache.http.protocol.HttpContext context -> b
    org.apache.http.client.methods.HttpUriRequest request -> c
    com.loopj.android.http.AsyncHttpResponseHandler responseHandler -> d
    boolean isBinaryRequest -> e
    int executionCount -> f
    void run() -> run
    void makeRequest() -> a
    void makeRequestWithRetries() -> b
com.loopj.android.http.AsyncHttpResponseHandler -> com.a.a.a.f:
    android.os.Handler handler -> a
    void onStart() -> a
    void onFinish() -> b
    void onSuccess(java.lang.String) -> a
    void onSuccess(int,java.lang.String) -> a
    void onFailure(java.lang.Throwable) -> a
    void onFailure(java.lang.Throwable,java.lang.String) -> a
    void sendSuccessMessage(int,java.lang.String) -> b
    void sendFailureMessage(java.lang.Throwable,java.lang.String) -> b
    void sendFailureMessage(java.lang.Throwable,byte[]) -> a
    void sendStartMessage() -> c
    void sendFinishMessage() -> d
    void handleSuccessMessage(int,java.lang.String) -> c
    void handleFailureMessage(java.lang.Throwable,java.lang.String) -> c
    void handleMessage(android.os.Message) -> a
    void sendMessage(android.os.Message) -> b
    android.os.Message obtainMessage(int,java.lang.Object) -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
com.loopj.android.http.AsyncHttpResponseHandler$1 -> com.a.a.a.g:
    com.loopj.android.http.AsyncHttpResponseHandler this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.BinaryHttpResponseHandler -> com.a.a.a.h:
    java.lang.String[] mAllowedContentTypes -> a
    void onSuccess(byte[]) -> a
    void onSuccess(int,byte[]) -> a
    void onFailure(java.lang.Throwable,byte[]) -> b
    void sendSuccessMessage(int,byte[]) -> b
    void sendFailureMessage(java.lang.Throwable,byte[]) -> a
    void handleSuccessMessage(int,byte[]) -> c
    void handleFailureMessage(java.lang.Throwable,byte[]) -> c
    void handleMessage(android.os.Message) -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
com.loopj.android.http.JsonHttpResponseHandler -> com.a.a.a.i:
    void onSuccess(org.json.JSONObject) -> a
    void onSuccess(org.json.JSONArray) -> a
    void onSuccess(int,org.json.JSONObject) -> a
    void onSuccess(int,org.json.JSONArray) -> a
    void onFailure(java.lang.Throwable,org.json.JSONObject) -> a
    void onFailure(java.lang.Throwable,org.json.JSONArray) -> a
    void sendSuccessMessage(int,java.lang.String) -> b
    void handleMessage(android.os.Message) -> a
    void handleSuccessJsonMessage(int,java.lang.Object) -> b
    java.lang.Object parseResponse(java.lang.String) -> b
    void handleFailureMessage(java.lang.Throwable,java.lang.String) -> c
com.loopj.android.http.RequestParams -> com.a.a.a.j:
    java.lang.String ENCODING -> d
    java.util.concurrent.ConcurrentHashMap urlParams -> a
    java.util.concurrent.ConcurrentHashMap fileParams -> b
    java.util.concurrent.ConcurrentHashMap urlParamsWithArray -> c
    void put(java.lang.String,java.lang.String) -> a
    java.lang.String toString() -> toString
    void init() -> c
    java.util.List getParamsList() -> a
    java.lang.String getParamString() -> b
com.loopj.android.http.RetryHandler -> com.a.a.a.k:
    java.util.HashSet exceptionWhitelist -> a
    java.util.HashSet exceptionBlacklist -> b
    int maxRetries -> c
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> a
com.umeng.analytics.MobclickAgent -> com.b.a.a:
    com.umeng.analytics.b a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void onKillProcess(android.content.Context) -> c
com.umeng.analytics.a -> com.b.a.b:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    com.umeng.analytics.i b -> b
    android.content.Context c -> c
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.i) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
com.umeng.analytics.a.a -> com.b.a.a.a:
    java.util.HashMap a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.b -> com.b.a.a.b:
    java.lang.String a -> a
    java.util.ArrayList b -> b
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.b) -> a
com.umeng.analytics.a.c -> com.b.a.a.c:
    com.umeng.analytics.a.b a -> a
com.umeng.analytics.a.d -> com.b.a.a.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(java.lang.Throwable) -> a
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.e -> com.b.a.a.e:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    java.lang.String k -> j
    java.lang.String l -> k
    java.lang.String m -> l
    java.lang.String n -> m
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.f -> com.b.a.a.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    long p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    int y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String al -> al
    void j(org.json.JSONObject) -> a
    void k(org.json.JSONObject) -> c
    void l(org.json.JSONObject) -> d
    void m(org.json.JSONObject) -> e
    void n(org.json.JSONObject) -> f
    void o(org.json.JSONObject) -> g
    void p(org.json.JSONObject) -> h
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(android.content.Context,java.lang.String[]) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void b(android.content.Context,java.lang.String[]) -> b
    boolean b() -> b
com.umeng.analytics.a.g -> com.b.a.a.g:
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.h -> com.b.a.a.h:
    com.umeng.analytics.a.o a -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.i -> com.b.a.a.i:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.e) -> a
    void a(com.umeng.analytics.a.b) -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void a(org.json.JSONObject) -> a
    org.json.JSONArray a(java.util.ArrayList) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.i) -> a
    void b(java.util.ArrayList) -> b
    int b() -> b
    void c() -> c
com.umeng.analytics.a.j -> com.b.a.a.j:
    com.umeng.analytics.a.i a -> a
com.umeng.analytics.a.k -> com.b.a.a.k:
    java.lang.String a -> a
    int b -> b
com.umeng.analytics.a.l -> com.b.a.a.l:
    java.lang.String e -> e
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.m -> com.b.a.a.m:
    com.umeng.analytics.a.o a -> a
    com.umeng.analytics.a.p b -> b
    long c -> c
    java.util.ArrayList d -> d
    com.umeng.analytics.a.m a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String[] b(android.content.SharedPreferences) -> b
    java.util.ArrayList c(android.content.SharedPreferences) -> c
    long d(android.content.SharedPreferences) -> d
    android.content.SharedPreferences$Editor a(android.content.SharedPreferences,java.lang.String,long,long) -> a
    android.content.SharedPreferences$Editor a(android.content.SharedPreferences,java.util.ArrayList,long,long) -> a
    boolean a() -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void h(org.json.JSONObject) -> h
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.n -> com.b.a.a.n:
    java.lang.String g -> f
    java.lang.String h -> g
    java.lang.String i -> h
    java.lang.String j -> i
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.o -> com.b.a.a.o:
    double a -> a
    double b -> b
    long c -> c
    com.umeng.analytics.a.o a(android.content.Context) -> a
    com.umeng.analytics.a.o b(android.content.Context) -> b
    android.content.SharedPreferences$Editor a(android.content.Context,android.content.SharedPreferences) -> a
    boolean a(android.location.Location,android.content.SharedPreferences) -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
    boolean a() -> a
com.umeng.analytics.a.p -> com.b.a.a.p:
    long a -> a
    long b -> b
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    com.umeng.analytics.a.p a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
com.umeng.analytics.b -> com.b.a.c:
    java.util.concurrent.ExecutorService a -> a
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    long t -> t
    int u -> u
    int v -> v
    java.util.Stack w -> w
    java.util.ArrayList x -> x
    void b(java.lang.String) -> a
    void a(android.content.Context) -> a
    void h(android.content.Context) -> f
    void b(android.content.Context) -> b
    void i(android.content.Context) -> g
    void j(android.content.Context) -> h
    void a(android.content.Context,android.content.SharedPreferences) -> a
    boolean a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context,android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,long) -> a
    java.lang.String c(android.content.Context,android.content.SharedPreferences) -> c
    void d(android.content.Context) -> c
    void b(android.content.Context,java.lang.Throwable) -> a
    void a(com.umeng.analytics.b,android.content.Context) -> a
    void b(com.umeng.analytics.b,android.content.Context) -> b
com.umeng.analytics.b$a -> com.b.a.d:
    java.lang.Object b -> b
    android.content.Context c -> c
    int d -> d
    com.umeng.analytics.b a -> a
    void run() -> run
com.umeng.analytics.c -> com.b.a.e:
    com.umeng.analytics.a.i a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    int d -> d
    int a() -> a
    boolean b() -> b
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    boolean c() -> c
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    org.json.JSONObject d() -> d
    void e() -> e
com.umeng.analytics.d -> com.b.a.f:
    com.umeng.analytics.a a -> a
    java.lang.Object b -> b
    android.os.Handler c -> c
    com.umeng.analytics.c d -> d
    com.umeng.analytics.a.f e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    long p -> p
    long q -> q
    long r -> r
    java.lang.String k -> k
    java.lang.String l -> l
    boolean s -> s
    void a(android.content.Context,int) -> a
    void a(android.content.Context) -> a
    void f(android.content.Context) -> d
    void b(android.content.Context) -> b
    boolean b(android.content.Context,int) -> b
    java.lang.String c(android.content.Context) -> c
    void d(android.content.Context) -> f
    org.json.JSONObject g(android.content.Context) -> e
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    java.lang.Object a(com.umeng.analytics.d) -> a
    void a(com.umeng.analytics.d,android.content.Context) -> a
com.umeng.analytics.d$a -> com.b.a.g:
    android.content.Context b -> b
    com.umeng.analytics.d a -> a
    void run() -> run
com.umeng.analytics.d$b -> com.b.a.h:
    android.content.Context b -> b
    com.umeng.analytics.d a -> a
    void run() -> run
com.umeng.analytics.e -> com.b.a.i:
    com.umeng.analytics.d a -> a
com.umeng.analytics.f -> com.b.a.j:
    java.lang.String a -> a
    long b -> b
com.umeng.analytics.g -> com.b.a.k:
    long d -> a
    long g -> b
    int h -> c
    boolean i -> d
    boolean j -> e
    boolean k -> f
    boolean l -> g
    boolean m -> h
    java.lang.Object p -> i
    java.lang.String[] r -> j
    java.lang.String[] s -> k
    boolean t -> l
com.umeng.analytics.h -> com.b.a.l:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
com.umeng.analytics.i -> com.b.a.m:
    void b(android.content.Context,java.lang.Throwable) -> a
com.umeng.analytics.j -> com.b.a.n:
    long a -> a
    long b -> b
    android.content.SharedPreferences b(android.content.Context) -> a
    android.content.SharedPreferences c(android.content.Context) -> b
    android.content.SharedPreferences e(android.content.Context) -> c
    java.lang.String f(android.content.Context) -> d
    java.lang.String g(android.content.Context) -> e
    int[] i(android.content.Context) -> f
    boolean a(java.io.File) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    void a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    void a(android.content.Context,com.umeng.analytics.a.g,java.lang.String) -> a
    void b(android.content.Context,org.json.JSONObject,java.lang.String) -> b
    void j(android.content.Context) -> g
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.b.a.b.a:
com.umeng.analytics.onlineconfig.a -> com.b.a.b.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener f -> f
    com.umeng.analytics.onlineconfig.c g -> g
    void a(com.umeng.analytics.onlineconfig.c) -> a
com.umeng.analytics.onlineconfig.c -> com.b.a.b.c:
com.umeng.common.Log -> com.b.b.a:
    boolean LOG -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> c
com.umeng.common.b -> com.b.b.b:
    java.lang.String a -> a
    java.lang.String d(android.content.Context) -> a
    java.lang.String e(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String g(android.content.Context) -> c
    java.lang.String h(android.content.Context) -> d
    java.lang.String[] k(android.content.Context) -> e
    boolean l(android.content.Context) -> f
    android.location.Location m(android.content.Context) -> g
    boolean n(android.content.Context) -> h
    int o(android.content.Context) -> i
    java.lang.String[] p(android.content.Context) -> j
    java.util.Locale y(android.content.Context) -> q
    java.lang.String q(android.content.Context) -> k
    java.lang.String r(android.content.Context) -> l
    java.lang.String s(android.content.Context) -> m
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String t(android.content.Context) -> n
    java.lang.String a(java.util.Date) -> a
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
com.umeng.common.util.f -> com.b.b.a.a:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
com.umeng.common.util.h -> com.b.b.a.b:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean d(java.lang.String) -> c
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
com.yuedu.R -> com.yuedu.R:
com.yuedu.R$attr -> com.yuedu.R$attr:
com.yuedu.R$dimen -> com.yuedu.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
com.yuedu.R$drawable -> com.yuedu.R$drawable:
    int down -> down
    int greeting -> greeting
    int ic_launcher -> ic_launcher
    int list -> list
    int next -> next
    int pause -> pause
    int play -> play
    int play_button_selector -> play_button_selector
    int progressbar -> progressbar
com.yuedu.R$id -> com.yuedu.R$id:
    int greeting_view -> greeting_view
    int nexttune_ib -> nexttune_ib
    int notification_icon -> notification_icon
    int notification_next -> notification_next
    int notification_pause_or_play -> notification_pause_or_play
    int notification_tune_name -> notification_tune_name
    int options_menu_quit -> options_menu_quit
    int play_ib -> play_ib
    int playlist_ib -> playlist_ib
    int playlist_ll -> playlist_ll
    int playlist_lv -> playlist_lv
    int tune_cover_iv -> tune_cover_iv
    int tune_info_tv -> tune_info_tv
    int tune_item_info_tv -> tune_item_info_tv
    int tune_item_thumb_iv -> tune_item_thumb_iv
    int tune_item_time_tv -> tune_item_time_tv
    int tune_item_title_tv -> tune_item_title_tv
    int tune_name_tv -> tune_name_tv
    int tune_played_time_tv -> tune_played_time_tv
    int tune_progress_pb -> tune_progress_pb
com.yuedu.R$layout -> com.yuedu.R$layout:
    int activity_main_player -> activity_main_player
    int notification_layout -> notification_layout
    int playlist_item -> playlist_item
com.yuedu.R$menu -> com.yuedu.R$menu:
    int main_player -> main_player
com.yuedu.R$string -> com.yuedu.R$string:
    int action_quit -> action_quit
    int app_name -> app_name
    int author -> author
    int player -> player
com.yuedu.R$style -> com.yuedu.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.yuedu.fm.DataAccessor -> com.yuedu.fm.a:
    com.yuedu.fm.DataAccessor SINGLE_INSTANCE -> a
    java.util.List mDataList -> b
    int mPlayingTuneIndex -> c
    com.loopj.android.http.AsyncHttpClient mHTTPClient -> d
    java.lang.ref.WeakReference mDataHandler -> e
    com.yuedu.fm.DataAccessor[] $VALUES -> f
    com.yuedu.fm.DataAccessor[] values() -> values
    com.yuedu.fm.DataAccessor valueOf(java.lang.String) -> valueOf
    com.yuedu.fm.DataAccessor$DataAccessorHandler getmDataHandler() -> a
    void setmDataHandler(com.yuedu.fm.DataAccessor$DataAccessorHandler) -> a
    java.util.List getDataList() -> b
    com.yuedu.fm.TuneInfo getPlayingTune() -> c
    int getPlayingTuneIndex() -> d
    void playTuneAtIndex(int) -> a
    com.yuedu.fm.TuneInfo playNextTune() -> e
    com.loopj.android.http.AsyncHttpClient getClient() -> f
    void setDataList(org.json.JSONArray,android.content.Context) -> a
    void downloadData(android.content.Context) -> a
    void access$000(com.yuedu.fm.DataAccessor,org.json.JSONArray,android.content.Context) -> a
    java.lang.ref.WeakReference access$100(com.yuedu.fm.DataAccessor) -> a
com.yuedu.fm.DataAccessor$1 -> com.yuedu.fm.b:
    android.content.Context val$context -> a
    com.yuedu.fm.DataAccessor this$0 -> b
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.Throwable,org.json.JSONObject) -> a
com.yuedu.fm.DataAccessor$DataAccessorHandler -> com.yuedu.fm.c:
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.Throwable,org.json.JSONObject) -> a
com.yuedu.fm.MainPlayer -> com.yuedu.fm.MainPlayer:
    android.content.BroadcastReceiver mServiceBroadcastReceiver -> o
    com.yuedu.fm.MainPlayer$PlaylistAdapter mAdapter -> p
    android.widget.ListView mListView -> q
    android.widget.RelativeLayout mListViewContainer -> r
    android.widget.ImageView mImageView -> s
    com.yuedu.image.ImageFetcher mImageFetcher -> t
    android.widget.TextView mTitleView -> u
    android.widget.TextView mInfoView -> v
    android.widget.ImageButton mListButton -> w
    android.widget.ImageButton mPlayButton -> x
    android.widget.ImageButton mNextButton -> y
    android.widget.ProgressBar mProgressBar -> z
    android.widget.TextView mPlayedTimeTextView -> A
    android.content.BroadcastReceiver mNetworkStateReceiver -> B
    boolean $assertionsDisabled -> n
    void showLoading() -> r
    void hideLoading() -> s
    void setCurrentPosition(int) -> a
    android.widget.TextView getmPlayedTimeTextView() -> f
    android.widget.ProgressBar getmProgressBar() -> g
    int getCurrentPlayingTuneDuration() -> t
    android.widget.ListView getmListView() -> h
    android.widget.RelativeLayout getmListViewContainer() -> i
    com.yuedu.fm.MainPlayer$PlaylistAdapter getAdapter() -> j
    android.widget.ImageView getmImageView() -> k
    android.widget.TextView getmInfoView() -> l
    android.widget.TextView getmTitleView() -> m
    com.yuedu.image.ImageFetcher getmImageFetcher() -> n
    android.widget.ImageButton getmListButton() -> o
    android.widget.ImageButton getmPlayButton() -> p
    android.widget.ImageButton getmNextButton() -> q
    void updateCover() -> u
    void updateListView() -> v
    void updateListViewSelection() -> w
    void updateUI() -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.Throwable,org.json.JSONObject) -> a
    void hideGreetingView() -> y
    void setPlaylistViewVisible(boolean) -> b
    boolean isPlaylistViewVisible() -> z
    boolean playButtonIsPlayingState() -> A
    void setPlayButtonPlaying(boolean) -> c
    void onDestroy() -> onDestroy
    void play() -> B
    void pausePlay() -> C
    void playNextTune() -> D
    void playTuneAtIndex(int) -> b
    void sendLocalBroadcast(android.content.Intent) -> a
    void registerLocalBroadcastReceiver() -> E
    void unregisterLocalBroadcastReceiver() -> F
    void quit() -> G
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onResume() -> onResume
    void onPause() -> onPause
    void access$000(com.yuedu.fm.MainPlayer,boolean) -> a
    void access$100(com.yuedu.fm.MainPlayer,int) -> a
    void access$200(com.yuedu.fm.MainPlayer) -> a
    void access$300(com.yuedu.fm.MainPlayer) -> b
    void access$400(com.yuedu.fm.MainPlayer) -> c
    void access$500(com.yuedu.fm.MainPlayer) -> d
    void access$600(com.yuedu.fm.MainPlayer) -> e
    void access$700(com.yuedu.fm.MainPlayer,boolean) -> b
    void access$800(com.yuedu.fm.MainPlayer,int) -> b
    void access$900(com.yuedu.fm.MainPlayer) -> f
    boolean access$1000(com.yuedu.fm.MainPlayer) -> g
    boolean access$1100(com.yuedu.fm.MainPlayer) -> h
    void access$1200(com.yuedu.fm.MainPlayer) -> i
    void access$1300(com.yuedu.fm.MainPlayer) -> j
com.yuedu.fm.MainPlayer$1 -> com.yuedu.fm.d:
    com.yuedu.fm.MainPlayer this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.yuedu.fm.MainPlayer$2 -> com.yuedu.fm.e:
    com.yuedu.fm.MainPlayer this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.yuedu.fm.MainPlayer$3 -> com.yuedu.fm.f:
    com.yuedu.fm.MainPlayer this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.yuedu.fm.MainPlayer$4 -> com.yuedu.fm.g:
    com.yuedu.fm.MainPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.yuedu.fm.MainPlayer$5 -> com.yuedu.fm.h:
    com.yuedu.fm.MainPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.yuedu.fm.MainPlayer$6 -> com.yuedu.fm.i:
    com.yuedu.fm.MainPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.yuedu.fm.MainPlayer$PlaylistAdapter -> com.yuedu.fm.j:
    android.view.LayoutInflater inflater -> b
    com.yuedu.image.ImageFetcher imageFetcher -> c
    boolean $assertionsDisabled -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.yuedu.fm.StreamingDownloadMediaPlayer -> com.yuedu.fm.k:
    java.net.URL mURL -> a
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState mState -> b
    boolean mLooping -> c
    java.io.File mCacheDir -> d
    android.media.AudioTrack mAudioTrack -> e
    com.yuedu.image.DiskLruCache mDiskCache -> f
    android.os.Handler mHandler -> g
    com.yuedu.fm.StreamingDownloadMediaPlayer$StreamingAsyncTask mStreamingTask -> h
    int mBufferSize -> i
    com.yuedu.fm.StreamingDownloadMediaPlayer$OnPreparedListener mPreparedListener -> j
    com.yuedu.fm.StreamingDownloadMediaPlayer$OnCompletionListener mCompletionListener -> k
    com.yuedu.fm.StreamingDownloadMediaPlayer$OnErrorListener mErrorListener -> l
    java.io.File getCacheDir() -> a
    void setOnPreparedListener(com.yuedu.fm.StreamingDownloadMediaPlayer$OnPreparedListener) -> a
    void setOnCompletionListener(com.yuedu.fm.StreamingDownloadMediaPlayer$OnCompletionListener) -> a
    void setOnErrorListener(com.yuedu.fm.StreamingDownloadMediaPlayer$OnErrorListener) -> a
    void setCacheDir(java.io.File) -> a
    com.yuedu.image.DiskLruCache getDiskCache() -> o
    void setDataSource(java.net.URL) -> a
    java.net.URL getDataSource() -> b
    void reset() -> c
    void handleInput(java.net.URL,javazoom.jl.decoder.Decoder) -> a
    void notifyPrepared() -> p
    void prepareAsync() -> d
    void start() -> e
    void pause() -> f
    void stop() -> g
    long getCurrentPosition() -> h
    long getDuration() -> i
    boolean isPlaying() -> j
    boolean isPaused() -> k
    boolean isCompleted() -> l
    boolean isPreparing() -> m
    void release() -> n
    com.yuedu.fm.StreamingDownloadMediaPlayer$OnCompletionListener access$000(com.yuedu.fm.StreamingDownloadMediaPlayer) -> a
    android.os.Handler access$100(com.yuedu.fm.StreamingDownloadMediaPlayer) -> b
    com.yuedu.image.DiskLruCache access$300(com.yuedu.fm.StreamingDownloadMediaPlayer) -> c
    int access$500(com.yuedu.fm.StreamingDownloadMediaPlayer) -> d
    void access$600(com.yuedu.fm.StreamingDownloadMediaPlayer) -> e
    android.media.AudioTrack access$700(com.yuedu.fm.StreamingDownloadMediaPlayer) -> f
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState access$802(com.yuedu.fm.StreamingDownloadMediaPlayer,com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState) -> a
    com.yuedu.fm.StreamingDownloadMediaPlayer$OnErrorListener access$900(com.yuedu.fm.StreamingDownloadMediaPlayer) -> g
    com.yuedu.fm.StreamingDownloadMediaPlayer$OnPreparedListener access$1000(com.yuedu.fm.StreamingDownloadMediaPlayer) -> h
com.yuedu.fm.StreamingDownloadMediaPlayer$1 -> com.yuedu.fm.l:
    com.yuedu.fm.StreamingDownloadMediaPlayer this$0 -> a
    void onMarkerReached(android.media.AudioTrack) -> onMarkerReached
    void onPeriodicNotification(android.media.AudioTrack) -> onPeriodicNotification
com.yuedu.fm.StreamingDownloadMediaPlayer$1$1 -> com.yuedu.fm.m:
    com.yuedu.fm.StreamingDownloadMediaPlayer$1 this$1 -> a
    void run() -> run
com.yuedu.fm.StreamingDownloadMediaPlayer$2 -> com.yuedu.fm.n:
    java.net.URL val$url -> a
    javazoom.jl.decoder.Decoder val$decoder -> b
    com.yuedu.fm.StreamingDownloadMediaPlayer this$0 -> c
    java.lang.Void doInBackground(java.net.URL[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yuedu.fm.StreamingDownloadMediaPlayer$2$1 -> com.yuedu.fm.o:
    java.lang.Exception val$e -> a
    com.yuedu.fm.StreamingDownloadMediaPlayer$2 this$1 -> b
    void run() -> run
com.yuedu.fm.StreamingDownloadMediaPlayer$3 -> com.yuedu.fm.p:
    com.yuedu.fm.StreamingDownloadMediaPlayer this$0 -> a
    void run() -> run
com.yuedu.fm.StreamingDownloadMediaPlayer$OnCompletionListener -> com.yuedu.fm.q:
    void onCompletion(com.yuedu.fm.StreamingDownloadMediaPlayer) -> a
com.yuedu.fm.StreamingDownloadMediaPlayer$OnErrorListener -> com.yuedu.fm.r:
    void onError(com.yuedu.fm.StreamingDownloadMediaPlayer,java.lang.Throwable) -> a
com.yuedu.fm.StreamingDownloadMediaPlayer$OnPreparedListener -> com.yuedu.fm.s:
    void onPrepared(com.yuedu.fm.StreamingDownloadMediaPlayer) -> a
com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState -> com.yuedu.fm.t:
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState IDLE -> a
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState INITIALIZED -> b
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState PREPARING -> c
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState PREPARED -> d
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState STARTED -> e
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState STOPPED -> f
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState PAUSED -> g
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState COMPLETED -> h
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState ERROR -> i
    java.util.Map readableMap -> j
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState[] $VALUES -> k
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState[] values() -> values
    com.yuedu.fm.StreamingDownloadMediaPlayer$PlayerState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.yuedu.fm.StreamingDownloadMediaPlayer$StreamingAsyncTask -> com.yuedu.fm.u:
    boolean isPaused -> d
    boolean isStopped -> e
    boolean isPlaying -> f
    java.util.concurrent.locks.ReentrantLock pauseLock -> g
    java.util.concurrent.locks.Condition unpaused -> h
    float playedTimeInMS -> i
    com.yuedu.fm.StreamingDownloadMediaPlayer this$0 -> j
    void pause() -> a
    void start() -> b
    void stop() -> c
    void resume() -> d
    float getPlayedTimeInMS() -> e
com.yuedu.fm.StreamingDownloadMediaPlayer$StreamingPipe -> com.yuedu.fm.v:
    java.io.InputStream inputStream -> a
    java.io.OutputStream outputStream -> b
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    int read() -> read
com.yuedu.fm.TuneInfo -> com.yuedu.fm.w:
    int min -> a
    int sec -> b
    java.lang.String bgURL -> c
    java.lang.String imgURL -> d
    java.lang.String author -> e
    java.lang.String title -> f
    java.lang.String player -> g
    java.lang.String authorURL -> h
    java.lang.String sid -> i
    java.lang.String mp3URL -> j
com.yuedu.fm.YueduNotificationManager -> com.yuedu.fm.x:
    com.yuedu.fm.YueduNotificationManager SINGLE_INSTANCE -> a
    com.yuedu.fm.YueduNotificationManager[] $VALUES -> b
    com.yuedu.fm.YueduNotificationManager[] values() -> values
    com.yuedu.fm.YueduNotificationManager valueOf(java.lang.String) -> valueOf
    void setPlayButtonPlaying(android.content.Context,boolean) -> a
    void updateTitle(android.content.Context) -> a
    void showForegroundNotification(android.app.Service) -> a
    void setRemoteActions(android.content.Context,android.widget.RemoteViews) -> a
    void notify(android.content.Context,android.app.Notification) -> a
    android.app.PendingIntent getPendingIntent(android.content.Context) -> b
    android.app.Notification getNotification(android.content.Context,android.app.PendingIntent,android.widget.RemoteViews) -> a
    void stopForeground(android.app.Service) -> b
com.yuedu.fm.YueduService -> com.yuedu.fm.YueduService:
    android.media.AudioManager mAudioManager -> b
    android.telephony.TelephonyManager mTelephonyManager -> c
    com.yuedu.fm.StreamingDownloadMediaPlayer mPlayer -> d
    android.media.AudioManager$OnAudioFocusChangeListener mFocusListener -> e
    android.telephony.PhoneStateListener mPhoneStateListener -> f
    android.content.ComponentName REMOTE_CONTROL_RECEIVER_NAME -> g
    com.yuedu.fm.YueduService$NoisyAudioStreamReceiver mNoisyAudioStreamReceiver -> h
    android.content.BroadcastReceiver mBroadcastReceiver -> i
    com.yuedu.fm.YueduService$PausableThreadPoolExecutor mScheduler -> j
    android.content.IntentFilter intentFilter -> k
    boolean $assertionsDisabled -> a
    void sendPreparedBroadcast() -> h
    void sendWillPrepareBroadcast() -> i
    void sendWillPlayBroadcast() -> j
    void sendPlayingBroadcast() -> k
    void sendWillPauseBroadcast() -> l
    void sendPausedBroadcast() -> m
    void sendWillStopBroadcast() -> n
    void sendStoppedBroadcast() -> o
    void sendErrorOccurredBroadcast(java.lang.String) -> a
    void sendCompletionBroadcast() -> p
    void sendPlayStateBroadcast() -> q
    void tryToPrepareForPath(java.lang.String) -> b
    void prepareForPath(java.lang.String) -> c
    java.lang.String getCurrentDataSource() -> r
    com.yuedu.fm.YueduService$PausableThreadPoolExecutor getmScheduler() -> a
    com.yuedu.fm.StreamingDownloadMediaPlayer getmPlayer() -> b
    void sendLocalBroadcast(android.content.Intent) -> a
    void registerBroadcastReceiver() -> s
    void unregisterBroadcastReceiver() -> t
    android.media.AudioManager getmAudioManager() -> c
    android.telephony.TelephonyManager getmTelephonyManager() -> d
    android.media.AudioManager$OnAudioFocusChangeListener getmFocusListener() -> e
    android.telephony.PhoneStateListener getmPhoneStateListener() -> f
    com.yuedu.fm.YueduService$NoisyAudioStreamReceiver getmNoisyAudioStreamReceiver() -> g
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    boolean onUnbind(android.content.Intent) -> onUnbind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onCreate() -> onCreate
    void setTunePath(java.lang.String) -> d
    void play() -> u
    boolean prepareToPlay() -> v
    boolean stop() -> w
    boolean pause() -> x
    void prepareToStart() -> y
    void prepareToStop() -> z
    void prepareToPause() -> A
    void onDestroy() -> onDestroy
    void access$000(com.yuedu.fm.YueduService,java.lang.String) -> a
    boolean access$100(com.yuedu.fm.YueduService) -> a
    void access$200(com.yuedu.fm.YueduService) -> b
    void access$300(com.yuedu.fm.YueduService,android.content.Intent) -> a
    void access$400(com.yuedu.fm.YueduService) -> c
    void access$500(com.yuedu.fm.YueduService) -> d
    void access$600(com.yuedu.fm.YueduService) -> e
    com.yuedu.fm.YueduService$PausableThreadPoolExecutor access$700(com.yuedu.fm.YueduService) -> f
    void access$800(com.yuedu.fm.YueduService,java.lang.String) -> b
    void access$900(com.yuedu.fm.YueduService) -> g
    void access$1000(com.yuedu.fm.YueduService,java.lang.String) -> c
    boolean access$1100(com.yuedu.fm.YueduService) -> h
com.yuedu.fm.YueduService$1 -> com.yuedu.fm.y:
    com.yuedu.fm.YueduService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.yuedu.fm.YueduService$2 -> com.yuedu.fm.z:
    com.yuedu.fm.YueduService this$0 -> a
    void run() -> run
com.yuedu.fm.YueduService$3 -> com.yuedu.fm.aa:
    com.yuedu.fm.YueduService this$0 -> a
    void onPrepared(com.yuedu.fm.StreamingDownloadMediaPlayer) -> a
com.yuedu.fm.YueduService$4 -> com.yuedu.fm.ab:
    com.yuedu.fm.YueduService this$0 -> a
    void onCompletion(com.yuedu.fm.StreamingDownloadMediaPlayer) -> a
com.yuedu.fm.YueduService$5 -> com.yuedu.fm.ac:
    com.yuedu.fm.YueduService this$0 -> a
    void onError(com.yuedu.fm.StreamingDownloadMediaPlayer,java.lang.Throwable) -> a
com.yuedu.fm.YueduService$6 -> com.yuedu.fm.ad:
    com.yuedu.fm.YueduService this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.yuedu.fm.YueduService$7 -> com.yuedu.fm.ae:
    boolean isPausedByCall -> a
    com.yuedu.fm.YueduService this$0 -> b
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.yuedu.fm.YueduService$NoisyAudioStreamReceiver -> com.yuedu.fm.af:
    com.yuedu.fm.YueduService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.yuedu.fm.YueduService$PausableThreadPoolExecutor -> com.yuedu.fm.ag:
    boolean isPaused -> a
    java.util.concurrent.locks.ReentrantLock pauseLock -> b
    java.util.concurrent.locks.Condition unpaused -> c
    void beforeExecute(java.lang.Thread,java.lang.Runnable) -> beforeExecute
    void pause() -> a
    void resume() -> b
com.yuedu.image.AsyncTask -> com.yuedu.a.a:
    java.util.concurrent.ThreadFactory sThreadFactory -> d
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> e
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> a
    java.util.concurrent.Executor SERIAL_EXECUTOR -> b
    java.util.concurrent.Executor DUAL_THREAD_EXECUTOR -> c
    com.yuedu.image.AsyncTask$InternalHandler sHandler -> f
    java.util.concurrent.Executor sDefaultExecutor -> g
    com.yuedu.image.AsyncTask$WorkerRunnable mWorker -> h
    java.util.concurrent.FutureTask mFuture -> i
    com.yuedu.image.AsyncTask$Status mStatus -> j
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> k
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> l
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> b
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    com.yuedu.image.AsyncTask execute(java.lang.Object[]) -> c
    com.yuedu.image.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$300(com.yuedu.image.AsyncTask) -> a
    java.lang.Object access$400(com.yuedu.image.AsyncTask,java.lang.Object) -> a
    void access$500(com.yuedu.image.AsyncTask,java.lang.Object) -> b
    void access$600(com.yuedu.image.AsyncTask,java.lang.Object) -> c
com.yuedu.image.AsyncTask$1 -> com.yuedu.a.b:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.yuedu.image.AsyncTask$2 -> com.yuedu.a.c:
    com.yuedu.image.AsyncTask this$0 -> a
    java.lang.Object call() -> call
com.yuedu.image.AsyncTask$3 -> com.yuedu.a.d:
    com.yuedu.image.AsyncTask this$0 -> a
    void done() -> done
com.yuedu.image.AsyncTask$4 -> com.yuedu.a.e:
    int[] $SwitchMap$com$yuedu$image$AsyncTask$Status -> a
com.yuedu.image.AsyncTask$AsyncTaskResult -> com.yuedu.a.f:
    com.yuedu.image.AsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.yuedu.image.AsyncTask$InternalHandler -> com.yuedu.a.g:
    void handleMessage(android.os.Message) -> handleMessage
com.yuedu.image.AsyncTask$SerialExecutor -> com.yuedu.a.h:
    java.util.ArrayDeque mTasks -> a
    java.lang.Runnable mActive -> b
    void execute(java.lang.Runnable) -> execute
    void scheduleNext() -> a
com.yuedu.image.AsyncTask$SerialExecutor$1 -> com.yuedu.a.i:
    java.lang.Runnable val$r -> a
    com.yuedu.image.AsyncTask$SerialExecutor this$0 -> b
    void run() -> run
com.yuedu.image.AsyncTask$Status -> com.yuedu.a.j:
    com.yuedu.image.AsyncTask$Status PENDING -> a
    com.yuedu.image.AsyncTask$Status RUNNING -> b
    com.yuedu.image.AsyncTask$Status FINISHED -> c
    com.yuedu.image.AsyncTask$Status[] $VALUES -> d
    com.yuedu.image.AsyncTask$Status[] values() -> values
    com.yuedu.image.AsyncTask$Status valueOf(java.lang.String) -> valueOf
com.yuedu.image.AsyncTask$WorkerRunnable -> com.yuedu.a.k:
    java.lang.Object[] mParams -> b
com.yuedu.image.DiskLruCache -> com.yuedu.a.l:
    java.nio.charset.Charset UTF_8 -> a
    java.io.File directory -> b
    java.io.File journalFile -> c
    java.io.File journalFileTmp -> d
    int appVersion -> e
    long maxSize -> f
    int valueCount -> g
    long size -> h
    java.io.Writer journalWriter -> i
    java.util.LinkedHashMap lruEntries -> j
    int redundantOpCount -> k
    long nextSequenceNumber -> l
    java.util.concurrent.ExecutorService executorService -> m
    java.util.concurrent.Callable cleanupCallable -> n
    java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> a
    java.lang.String readAsciiLine(java.io.InputStream) -> a
    void closeQuietly(java.io.Closeable) -> a
    void deleteContents(java.io.File) -> a
    com.yuedu.image.DiskLruCache open(java.io.File,int,int,long) -> a
    void readJournal() -> d
    void readJournalLine(java.lang.String) -> d
    void processJournal() -> e
    void rebuildJournal() -> f
    void deleteIfExists(java.io.File) -> b
    com.yuedu.image.DiskLruCache$Snapshot get(java.lang.String) -> a
    com.yuedu.image.DiskLruCache$Editor edit(java.lang.String) -> b
    com.yuedu.image.DiskLruCache$Editor edit(java.lang.String,long) -> a
    void completeEdit(com.yuedu.image.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> g
    boolean remove(java.lang.String) -> c
    boolean isClosed() -> a
    void checkNotClosed() -> h
    void flush() -> b
    void close() -> close
    void trimToSize() -> i
    void delete() -> c
    void validateKey(java.lang.String) -> e
    java.io.Writer access$000(com.yuedu.image.DiskLruCache) -> a
    void access$100(com.yuedu.image.DiskLruCache) -> b
    boolean access$200(com.yuedu.image.DiskLruCache) -> c
    void access$300(com.yuedu.image.DiskLruCache) -> d
    int access$402(com.yuedu.image.DiskLruCache,int) -> a
    void access$1900(com.yuedu.image.DiskLruCache,com.yuedu.image.DiskLruCache$Editor,boolean) -> a
    int access$2100(com.yuedu.image.DiskLruCache) -> e
    java.io.File access$2200(com.yuedu.image.DiskLruCache) -> f
com.yuedu.image.DiskLruCache$1 -> com.yuedu.a.m:
    com.yuedu.image.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.yuedu.image.DiskLruCache$Editor -> com.yuedu.a.n:
    com.yuedu.image.DiskLruCache$Entry entry -> b
    boolean hasErrors -> c
    com.yuedu.image.DiskLruCache this$0 -> a
    java.io.OutputStream newOutputStream(int) -> a
    void commit() -> a
    void abort() -> b
    com.yuedu.image.DiskLruCache$Entry access$1400(com.yuedu.image.DiskLruCache$Editor) -> a
    boolean access$2002(com.yuedu.image.DiskLruCache$Editor,boolean) -> a
com.yuedu.image.DiskLruCache$Editor$FaultHidingOutputStream -> com.yuedu.a.o:
    com.yuedu.image.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.yuedu.image.DiskLruCache$Entry -> com.yuedu.a.p:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.yuedu.image.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.yuedu.image.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    boolean access$602(com.yuedu.image.DiskLruCache$Entry,boolean) -> a
    com.yuedu.image.DiskLruCache$Editor access$702(com.yuedu.image.DiskLruCache$Entry,com.yuedu.image.DiskLruCache$Editor) -> a
    void access$800(com.yuedu.image.DiskLruCache$Entry,java.lang.String[]) -> a
    com.yuedu.image.DiskLruCache$Editor access$700(com.yuedu.image.DiskLruCache$Entry) -> a
    long[] access$1000(com.yuedu.image.DiskLruCache$Entry) -> b
    java.lang.String access$1100(com.yuedu.image.DiskLruCache$Entry) -> c
    boolean access$600(com.yuedu.image.DiskLruCache$Entry) -> d
    long access$1200(com.yuedu.image.DiskLruCache$Entry) -> e
    long access$1202(com.yuedu.image.DiskLruCache$Entry,long) -> a
com.yuedu.image.DiskLruCache$Snapshot -> com.yuedu.a.q:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.InputStream[] ins -> d
    com.yuedu.image.DiskLruCache this$0 -> a
    java.io.InputStream getInputStream(int) -> a
    void close() -> close
com.yuedu.image.ImageCache -> com.yuedu.a.r:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    com.yuedu.image.DiskLruCache mDiskLruCache -> b
    android.support.v4.util.LruCache mMemoryCache -> c
    com.yuedu.image.ImageCache$ImageCacheParams mCacheParams -> d
    java.lang.Object mDiskCacheLock -> e
    boolean mDiskCacheStarting -> f
    java.util.HashSet mReusableBitmaps -> g
    com.yuedu.image.ImageCache getInstance(android.support.v4.app.FragmentManager,com.yuedu.image.ImageCache$ImageCacheParams) -> a
    void init(com.yuedu.image.ImageCache$ImageCacheParams) -> a
    void initDiskCache() -> a
    void addBitmapToCache(java.lang.String,android.graphics.drawable.BitmapDrawable) -> a
    android.graphics.drawable.BitmapDrawable getBitmapFromMemCache(java.lang.String) -> a
    android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String) -> b
    android.graphics.Bitmap getBitmapFromReusableSet(android.graphics.BitmapFactory$Options) -> a
    void clearCache() -> b
    void flush() -> c
    void close() -> d
    boolean canUseForInBitmap(android.graphics.Bitmap,android.graphics.BitmapFactory$Options) -> a
    java.io.File getDiskCacheDir(android.content.Context,java.lang.String) -> a
    java.lang.String hashKeyForDisk(java.lang.String) -> c
    java.lang.String bytesToHexString(byte[]) -> a
    int getBitmapSize(android.graphics.drawable.BitmapDrawable) -> a
    boolean isExternalStorageRemovable() -> e
    java.io.File getExternalCacheDir(android.content.Context) -> a
    long getUsableSpace(java.io.File) -> a
    com.yuedu.image.ImageCache$RetainFragment findOrCreateRetainFragment(android.support.v4.app.FragmentManager) -> a
    java.util.HashSet access$000(com.yuedu.image.ImageCache) -> a
    android.graphics.Bitmap$CompressFormat access$100() -> f
com.yuedu.image.ImageCache$1 -> com.yuedu.a.s:
    com.yuedu.image.ImageCache this$0 -> a
    void entryRemoved(boolean,java.lang.String,android.graphics.drawable.BitmapDrawable,android.graphics.drawable.BitmapDrawable) -> a
    int sizeOf(java.lang.String,android.graphics.drawable.BitmapDrawable) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.yuedu.image.ImageCache$ImageCacheParams -> com.yuedu.a.t:
    int memCacheSize -> a
    int diskCacheSize -> b
    java.io.File diskCacheDir -> c
    android.graphics.Bitmap$CompressFormat compressFormat -> d
    int compressQuality -> e
    boolean memoryCacheEnabled -> f
    boolean diskCacheEnabled -> g
    boolean initDiskCacheOnCreate -> h
    void setMemCacheSizePercent(float) -> a
com.yuedu.image.ImageCache$RetainFragment -> com.yuedu.a.u:
    java.lang.Object mObject -> P
    void onCreate(android.os.Bundle) -> c
    void setObject(java.lang.Object) -> a
    java.lang.Object getObject() -> w
com.yuedu.image.ImageFetcher -> com.yuedu.a.v:
    com.yuedu.image.DiskLruCache mHttpDiskCache -> e
    java.io.File mHttpCacheDir -> f
    boolean mHttpDiskCacheStarting -> g
    java.lang.Object mHttpDiskCacheLock -> h
    void init(android.content.Context) -> a
    void initDiskCacheInternal() -> a
    void initHttpDiskCache() -> g
    void clearCacheInternal() -> b
    void flushCacheInternal() -> c
    void closeCacheInternal() -> d
    void checkConnection(android.content.Context) -> b
    android.graphics.Bitmap processBitmap(java.lang.String) -> a
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    boolean downloadUrlToStream(java.lang.String,java.io.OutputStream) -> a
    void disableConnectionReuseIfNecessary() -> e
com.yuedu.image.ImageResizer -> com.yuedu.a.w:
    int mImageWidth -> a
    int mImageHeight -> b
    void setImageSize(int,int) -> a
    void setImageSize(int) -> a
    android.graphics.Bitmap processBitmap(int) -> b
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,int,int,com.yuedu.image.ImageCache) -> a
    android.graphics.Bitmap decodeSampledBitmapFromDescriptor(java.io.FileDescriptor,int,int,com.yuedu.image.ImageCache) -> a
    void addInBitmapOptions(android.graphics.BitmapFactory$Options,com.yuedu.image.ImageCache) -> a
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
com.yuedu.image.ImageWorker -> com.yuedu.a.x:
    com.yuedu.image.ImageCache mImageCache -> a
    com.yuedu.image.ImageCache$ImageCacheParams mImageCacheParams -> b
    android.graphics.Bitmap mLoadingBitmap -> e
    boolean mFadeInBitmap -> f
    boolean mExitTasksEarly -> g
    boolean mPauseWork -> c
    java.lang.Object mPauseWorkLock -> h
    android.content.res.Resources mResources -> d
    int width -> i
    int height -> j
    void loadImage(java.lang.Object,android.widget.ImageView) -> a
    void addImageCache(android.support.v4.app.FragmentManager,com.yuedu.image.ImageCache$ImageCacheParams) -> a
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    com.yuedu.image.ImageCache getImageCache() -> f
    boolean cancelPotentialWork(java.lang.Object,android.widget.ImageView) -> b
    com.yuedu.image.ImageWorker$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> b
    void setImageDrawable(android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    void initDiskCacheInternal() -> a
    void clearCacheInternal() -> b
    void flushCacheInternal() -> c
    void closeCacheInternal() -> d
    java.lang.Object access$100(com.yuedu.image.ImageWorker) -> a
    com.yuedu.image.ImageCache access$200(com.yuedu.image.ImageWorker) -> b
    boolean access$300(com.yuedu.image.ImageWorker) -> c
    int access$402(com.yuedu.image.ImageWorker,int) -> a
    int access$502(com.yuedu.image.ImageWorker,int) -> b
    void access$600(com.yuedu.image.ImageWorker,android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    com.yuedu.image.ImageWorker$BitmapWorkerTask access$700(android.widget.ImageView) -> a
com.yuedu.image.ImageWorker$AsyncDrawable -> com.yuedu.a.y:
    java.lang.ref.WeakReference bitmapWorkerTaskReference -> a
    com.yuedu.image.ImageWorker$BitmapWorkerTask getBitmapWorkerTask() -> a
com.yuedu.image.ImageWorker$BitmapWorkerTask -> com.yuedu.a.z:
    java.lang.Object data -> e
    java.lang.ref.WeakReference imageViewReference -> f
    com.yuedu.image.ImageWorker this$0 -> d
    void onPreExecute() -> a
    android.graphics.drawable.BitmapDrawable doInBackground(java.lang.Object[]) -> d
    void onPostExecute(android.graphics.drawable.BitmapDrawable) -> a
    void onCancelled(android.graphics.drawable.BitmapDrawable) -> b
    android.widget.ImageView getAttachedImageView() -> d
    void onCancelled(java.lang.Object) -> b
    void onPostExecute(java.lang.Object) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    java.lang.Object access$000(com.yuedu.image.ImageWorker$BitmapWorkerTask) -> a
com.yuedu.image.ImageWorker$CacheAsyncTask -> com.yuedu.a.aa:
    com.yuedu.image.ImageWorker this$0 -> d
    java.lang.Void doInBackground(java.lang.Object[]) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
com.yuedu.image.RecyclingBitmapDrawable -> com.yuedu.a.ab:
    int mCacheRefCount -> a
    int mDisplayRefCount -> b
    boolean mHasBeenDisplayed -> c
    void setIsCached(boolean) -> a
    void checkState() -> a
    boolean hasValidBitmap() -> b
com.yuedu.image.Utils -> com.yuedu.a.ac:
    boolean hasFroyo() -> a
    boolean hasGingerbread() -> b
    boolean hasHoneycomb() -> c
    boolean hasHoneycombMR1() -> d
com.yuedu.utils.MD5Util -> com.yuedu.b.a:
    java.security.MessageDigest sMd5MessageDigest -> a
    java.lang.StringBuilder sStringBuilder -> b
    java.lang.String md5(java.lang.String) -> a
javazoom.jl.converter.Converter -> javazoom.jl.converter.Converter:
    void convert(java.lang.String,java.lang.String) -> convert
    void convert(java.lang.String,java.lang.String,javazoom.jl.converter.Converter$ProgressListener) -> convert
    void convert(java.lang.String,java.lang.String,javazoom.jl.converter.Converter$ProgressListener,javazoom.jl.decoder.Decoder$Params) -> convert
    void convert(java.io.InputStream,java.lang.String,javazoom.jl.converter.Converter$ProgressListener,javazoom.jl.decoder.Decoder$Params) -> convert
    int countFrames(java.io.InputStream) -> countFrames
    java.io.InputStream openInput(java.lang.String) -> openInput
javazoom.jl.converter.Converter$PrintWriterProgressListener -> javazoom.jl.converter.Converter$PrintWriterProgressListener:
    int NO_DETAIL -> NO_DETAIL
    int EXPERT_DETAIL -> EXPERT_DETAIL
    int VERBOSE_DETAIL -> VERBOSE_DETAIL
    int DEBUG_DETAIL -> DEBUG_DETAIL
    int MAX_DETAIL -> MAX_DETAIL
    java.io.PrintWriter pw -> pw
    int detailLevel -> detailLevel
    javazoom.jl.converter.Converter$PrintWriterProgressListener newStdOut(int) -> newStdOut
    boolean isDetail(int) -> isDetail
    void converterUpdate(int,int,int) -> converterUpdate
    void parsedFrame(int,javazoom.jl.decoder.Header) -> parsedFrame
    void readFrame(int,javazoom.jl.decoder.Header) -> readFrame
    void decodedFrame(int,javazoom.jl.decoder.Header,javazoom.jl.decoder.Obuffer) -> decodedFrame
    boolean converterException(java.lang.Throwable) -> converterException
javazoom.jl.converter.Converter$ProgressListener -> javazoom.jl.converter.Converter$ProgressListener:
    int UPDATE_FRAME_COUNT -> UPDATE_FRAME_COUNT
    int UPDATE_CONVERT_COMPLETE -> UPDATE_CONVERT_COMPLETE
    void converterUpdate(int,int,int) -> converterUpdate
    void parsedFrame(int,javazoom.jl.decoder.Header) -> parsedFrame
    void readFrame(int,javazoom.jl.decoder.Header) -> readFrame
    void decodedFrame(int,javazoom.jl.decoder.Header,javazoom.jl.decoder.Obuffer) -> decodedFrame
    boolean converterException(java.lang.Throwable) -> converterException
javazoom.jl.converter.RiffFile -> javazoom.jl.converter.RiffFile:
    int DDC_SUCCESS -> DDC_SUCCESS
    int DDC_FAILURE -> DDC_FAILURE
    int DDC_OUT_OF_MEMORY -> DDC_OUT_OF_MEMORY
    int DDC_FILE_ERROR -> DDC_FILE_ERROR
    int DDC_INVALID_CALL -> DDC_INVALID_CALL
    int DDC_USER_ABORT -> DDC_USER_ABORT
    int DDC_INVALID_FILE -> DDC_INVALID_FILE
    int RFM_UNKNOWN -> RFM_UNKNOWN
    int RFM_WRITE -> RFM_WRITE
    int RFM_READ -> RFM_READ
    javazoom.jl.converter.RiffFile$RiffChunkHeader riff_header -> riff_header
    int fmode -> fmode
    java.io.RandomAccessFile file -> file
    int CurrentFileMode() -> CurrentFileMode
    int Open(java.lang.String,int) -> Open
    int Write(byte[],int) -> Write
    int Write(short[],int) -> Write
    int Write(javazoom.jl.converter.RiffFile$RiffChunkHeader,int) -> Write
    int Write(short,int) -> Write
    int Write(int,int) -> Write
    int Read(byte[],int) -> Read
    int Expect(java.lang.String,int) -> Expect
    int Close() -> Close
    long CurrentFilePosition() -> CurrentFilePosition
    int Backpatch(long,javazoom.jl.converter.RiffFile$RiffChunkHeader,int) -> Backpatch
    int Backpatch(long,byte[],int) -> Backpatch
    int Seek(long) -> Seek
    java.lang.String DDCRET_String(int) -> DDCRET_String
    int FourCC(java.lang.String) -> FourCC
javazoom.jl.converter.RiffFile$RiffChunkHeader -> javazoom.jl.converter.RiffFile$RiffChunkHeader:
    int ckID -> ckID
    int ckSize -> ckSize
    javazoom.jl.converter.RiffFile this$0 -> this$0
javazoom.jl.converter.WaveFile -> javazoom.jl.converter.WaveFile:
    int MAX_WAVE_CHANNELS -> MAX_WAVE_CHANNELS
    javazoom.jl.converter.WaveFile$WaveFormat_Chunk wave_format -> wave_format
    javazoom.jl.converter.RiffFile$RiffChunkHeader pcm_data -> pcm_data
    long pcm_data_offset -> pcm_data_offset
    int num_samples -> num_samples
    int OpenForWrite(java.lang.String,int,short,short) -> OpenForWrite
    int WriteData(short[],int) -> WriteData
    int Close() -> Close
    int SamplingRate() -> SamplingRate
    short BitsPerSample() -> BitsPerSample
    short NumChannels() -> NumChannels
    int NumSamples() -> NumSamples
    int OpenForWrite(java.lang.String,javazoom.jl.converter.WaveFile) -> OpenForWrite
    long CurrentFilePosition() -> CurrentFilePosition
javazoom.jl.converter.WaveFile$WaveFileSample -> javazoom.jl.converter.WaveFile$WaveFileSample:
    short[] chan -> chan
    javazoom.jl.converter.WaveFile this$0 -> this$0
javazoom.jl.converter.WaveFile$WaveFormat_Chunk -> javazoom.jl.converter.WaveFile$WaveFormat_Chunk:
    javazoom.jl.converter.RiffFile$RiffChunkHeader header -> header
    javazoom.jl.converter.WaveFile$WaveFormat_ChunkData data -> data
    javazoom.jl.converter.WaveFile this$0 -> this$0
    int VerifyValidity() -> VerifyValidity
javazoom.jl.converter.WaveFile$WaveFormat_ChunkData -> javazoom.jl.converter.WaveFile$WaveFormat_ChunkData:
    short wFormatTag -> wFormatTag
    short nChannels -> nChannels
    int nSamplesPerSec -> nSamplesPerSec
    int nAvgBytesPerSec -> nAvgBytesPerSec
    short nBlockAlign -> nBlockAlign
    short nBitsPerSample -> nBitsPerSample
    javazoom.jl.converter.WaveFile this$0 -> this$0
    void Config(int,short,short) -> Config
javazoom.jl.converter.WaveFileObuffer -> javazoom.jl.converter.WaveFileObuffer:
    short[] buffer -> buffer
    short[] bufferp -> bufferp
    int channels -> channels
    javazoom.jl.converter.WaveFile outWave -> outWave
    short[] myBuffer -> myBuffer
    void append(int,short) -> append
    void write_buffer(int) -> write_buffer
    void close() -> close
    void clear_buffer() -> clear_buffer
    void set_stop_flag() -> set_stop_flag
javazoom.jl.converter.jlc -> javazoom.jl.converter.jlc:
    void main(java.lang.String[]) -> main
javazoom.jl.converter.jlc$jlcArgs -> javazoom.jl.converter.jlc$jlcArgs:
    int which_c -> which_c
    int output_mode -> output_mode
    boolean use_own_scalefactor -> use_own_scalefactor
    float scalefactor -> scalefactor
    java.lang.String output_filename -> output_filename
    java.lang.String filename -> filename
    boolean verbose_mode -> verbose_mode
    int verbose_level -> verbose_level
    boolean processArgs(java.lang.String[]) -> processArgs
    boolean Usage() -> Usage
javazoom.jl.decoder.BitReserve -> javazoom.jl.decoder.BitReserve:
    int BUFSIZE -> BUFSIZE
    int BUFSIZE_MASK -> BUFSIZE_MASK
    int offset -> offset
    int totbit -> totbit
    int buf_byte_idx -> buf_byte_idx
    int[] buf -> buf
    int buf_bit_idx -> buf_bit_idx
    int hsstell() -> hsstell
    int hgetbits(int) -> hgetbits
    int hget1bit() -> hget1bit
    void hputbuf(int) -> hputbuf
    void rewindNbits(int) -> rewindNbits
    void rewindNbytes(int) -> rewindNbytes
javazoom.jl.decoder.Bitstream -> javazoom.jl.decoder.Bitstream:
    byte INITIAL_SYNC -> INITIAL_SYNC
    byte STRICT_SYNC -> STRICT_SYNC
    int BUFFER_INT_SIZE -> BUFFER_INT_SIZE
    int[] framebuffer -> framebuffer
    int framesize -> framesize
    byte[] frame_bytes -> frame_bytes
    int wordpointer -> wordpointer
    int bitindex -> bitindex
    int syncword -> syncword
    int header_pos -> header_pos
    boolean single_ch_mode -> single_ch_mode
    int[] bitmask -> bitmask
    java.io.PushbackInputStream source -> source
    javazoom.jl.decoder.Header header -> header
    byte[] syncbuf -> syncbuf
    javazoom.jl.decoder.Crc16[] crc -> crc
    byte[] rawid3v2 -> rawid3v2
    boolean firstframe -> firstframe
    int header_pos() -> header_pos
    void loadID3v2(java.io.InputStream) -> loadID3v2
    int readID3v2Header(java.io.InputStream) -> readID3v2Header
    java.io.InputStream getRawID3v2() -> getRawID3v2
    void close() -> close
    javazoom.jl.decoder.Header readFrame() -> readFrame
    javazoom.jl.decoder.Header readNextFrame() -> readNextFrame
    void nextFrame() -> nextFrame
    void unreadFrame() -> unreadFrame
    void closeFrame() -> closeFrame
    boolean isSyncCurrentPosition(int) -> isSyncCurrentPosition
    int readBits(int) -> readBits
    int readCheckedBits(int) -> readCheckedBits
    javazoom.jl.decoder.BitstreamException newBitstreamException(int) -> newBitstreamException
    javazoom.jl.decoder.BitstreamException newBitstreamException(int,java.lang.Throwable) -> newBitstreamException
    int syncHeader(byte) -> syncHeader
    boolean isSyncMark(int,int,int) -> isSyncMark
    int read_frame_data(int) -> read_frame_data
    void parse_frame() -> parse_frame
    int get_bits(int) -> get_bits
    void set_syncword(int) -> set_syncword
    int readFully(byte[],int,int) -> readFully
    int readBytes(byte[],int,int) -> readBytes
javazoom.jl.decoder.BitstreamErrors -> javazoom.jl.decoder.BitstreamErrors:
    int UNKNOWN_ERROR -> UNKNOWN_ERROR
    int UNKNOWN_SAMPLE_RATE -> UNKNOWN_SAMPLE_RATE
    int STREAM_ERROR -> STREAM_ERROR
    int UNEXPECTED_EOF -> UNEXPECTED_EOF
    int STREAM_EOF -> STREAM_EOF
    int INVALIDFRAME -> INVALIDFRAME
    int BITSTREAM_LAST -> BITSTREAM_LAST
javazoom.jl.decoder.BitstreamException -> javazoom.jl.decoder.BitstreamException:
    int errorcode -> errorcode
    int getErrorCode() -> getErrorCode
    java.lang.String getErrorString(int) -> getErrorString
javazoom.jl.decoder.Control -> javazoom.jl.decoder.Control:
    void start() -> start
    void stop() -> stop
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    boolean isRandomAccess() -> isRandomAccess
    double getPosition() -> getPosition
    void setPosition(double) -> setPosition
javazoom.jl.decoder.Crc16 -> javazoom.jl.decoder.Crc16:
    short polynomial -> polynomial
    short crc -> crc
    void add_bits(int,int) -> add_bits
    short checksum() -> checksum
javazoom.jl.decoder.Decoder -> javazoom.jl.decoder.Decoder:
    javazoom.jl.decoder.Decoder$Params DEFAULT_PARAMS -> DEFAULT_PARAMS
    javazoom.jl.decoder.Obuffer output -> output
    javazoom.jl.decoder.SynthesisFilter filter1 -> filter1
    javazoom.jl.decoder.SynthesisFilter filter2 -> filter2
    javazoom.jl.decoder.LayerIIIDecoder l3decoder -> l3decoder
    javazoom.jl.decoder.LayerIIDecoder l2decoder -> l2decoder
    javazoom.jl.decoder.LayerIDecoder l1decoder -> l1decoder
    int outputFrequency -> outputFrequency
    int outputChannels -> outputChannels
    javazoom.jl.decoder.Equalizer equalizer -> equalizer
    javazoom.jl.decoder.Decoder$Params params -> params
    boolean initialized -> initialized
    javazoom.jl.decoder.Decoder$Params getDefaultParams() -> getDefaultParams
    void setEqualizer(javazoom.jl.decoder.Equalizer) -> setEqualizer
    javazoom.jl.decoder.Obuffer decodeFrame(javazoom.jl.decoder.Header,javazoom.jl.decoder.Bitstream) -> decodeFrame
    void setOutputBuffer(javazoom.jl.decoder.Obuffer) -> setOutputBuffer
    int getOutputFrequency() -> getOutputFrequency
    int getOutputChannels() -> getOutputChannels
    int getOutputBlockSize() -> getOutputBlockSize
    javazoom.jl.decoder.DecoderException newDecoderException(int) -> newDecoderException
    javazoom.jl.decoder.DecoderException newDecoderException(int,java.lang.Throwable) -> newDecoderException
    javazoom.jl.decoder.FrameDecoder retrieveDecoder(javazoom.jl.decoder.Header,javazoom.jl.decoder.Bitstream,int) -> retrieveDecoder
    void initialize(javazoom.jl.decoder.Header) -> initialize
javazoom.jl.decoder.Decoder$Params -> javazoom.jl.decoder.Decoder$Params:
    javazoom.jl.decoder.OutputChannels outputChannels -> outputChannels
    javazoom.jl.decoder.Equalizer equalizer -> equalizer
    java.lang.Object clone() -> clone
    void setOutputChannels(javazoom.jl.decoder.OutputChannels) -> setOutputChannels
    javazoom.jl.decoder.OutputChannels getOutputChannels() -> getOutputChannels
    javazoom.jl.decoder.Equalizer getInitialEqualizerSettings() -> getInitialEqualizerSettings
javazoom.jl.decoder.DecoderErrors -> javazoom.jl.decoder.DecoderErrors:
    int UNKNOWN_ERROR -> UNKNOWN_ERROR
    int UNSUPPORTED_LAYER -> UNSUPPORTED_LAYER
    int ILLEGAL_SUBBAND_ALLOCATION -> ILLEGAL_SUBBAND_ALLOCATION
javazoom.jl.decoder.DecoderException -> javazoom.jl.decoder.DecoderException:
    int errorcode -> errorcode
    int getErrorCode() -> getErrorCode
    java.lang.String getErrorString(int) -> getErrorString
javazoom.jl.decoder.Equalizer -> javazoom.jl.decoder.Equalizer:
    float BAND_NOT_PRESENT -> BAND_NOT_PRESENT
    javazoom.jl.decoder.Equalizer PASS_THRU_EQ -> PASS_THRU_EQ
    int BANDS -> BANDS
    float[] settings -> settings
    void setFrom(float[]) -> setFrom
    void setFrom(javazoom.jl.decoder.Equalizer$EQFunction) -> setFrom
    void setFrom(javazoom.jl.decoder.Equalizer) -> setFrom
    void reset() -> reset
    int getBandCount() -> getBandCount
    float setBand(int,float) -> setBand
    float getBand(int) -> getBand
    float limit(float) -> limit
    float[] getBandFactors() -> getBandFactors
    float getBandFactor(float) -> getBandFactor
javazoom.jl.decoder.Equalizer$EQFunction -> javazoom.jl.decoder.Equalizer$EQFunction:
    float getBand(int) -> getBand
javazoom.jl.decoder.FrameDecoder -> javazoom.jl.decoder.FrameDecoder:
    void decodeFrame() -> decodeFrame
javazoom.jl.decoder.Header -> javazoom.jl.decoder.Header:
    int[][] frequencies -> frequencies
    int MPEG2_LSF -> MPEG2_LSF
    int MPEG25_LSF -> MPEG25_LSF
    int MPEG1 -> MPEG1
    int STEREO -> STEREO
    int JOINT_STEREO -> JOINT_STEREO
    int DUAL_CHANNEL -> DUAL_CHANNEL
    int SINGLE_CHANNEL -> SINGLE_CHANNEL
    int FOURTYFOUR_POINT_ONE -> FOURTYFOUR_POINT_ONE
    int FOURTYEIGHT -> FOURTYEIGHT
    int THIRTYTWO -> THIRTYTWO
    int h_layer -> h_layer
    int h_protection_bit -> h_protection_bit
    int h_bitrate_index -> h_bitrate_index
    int h_padding_bit -> h_padding_bit
    int h_mode_extension -> h_mode_extension
    int h_version -> h_version
    int h_mode -> h_mode
    int h_sample_frequency -> h_sample_frequency
    int h_number_of_subbands -> h_number_of_subbands
    int h_intensity_stereo_bound -> h_intensity_stereo_bound
    boolean h_copyright -> h_copyright
    boolean h_original -> h_original
    double[] h_vbr_time_per_frame -> h_vbr_time_per_frame
    boolean h_vbr -> h_vbr
    int h_vbr_frames -> h_vbr_frames
    int h_vbr_scale -> h_vbr_scale
    int h_vbr_bytes -> h_vbr_bytes
    byte[] h_vbr_toc -> h_vbr_toc
    byte syncmode -> syncmode
    javazoom.jl.decoder.Crc16 crc -> crc
    short checksum -> checksum
    int framesize -> framesize
    int nSlots -> nSlots
    int _headerstring -> _headerstring
    int[][][] bitrates -> bitrates
    java.lang.String[][][] bitrate_str -> bitrate_str
    java.lang.String toString() -> toString
    void read_header(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Crc16[]) -> read_header
    void parseVBR(byte[]) -> parseVBR
    int version() -> version
    int layer() -> layer
    int bitrate_index() -> bitrate_index
    int sample_frequency() -> sample_frequency
    int frequency() -> frequency
    int mode() -> mode
    boolean checksums() -> checksums
    boolean copyright() -> copyright
    boolean original() -> original
    boolean vbr() -> vbr
    int vbr_scale() -> vbr_scale
    byte[] vbr_toc() -> vbr_toc
    boolean checksum_ok() -> checksum_ok
    boolean padding() -> padding
    int slots() -> slots
    int mode_extension() -> mode_extension
    int calculate_framesize() -> calculate_framesize
    int max_number_of_frames(int) -> max_number_of_frames
    int min_number_of_frames(int) -> min_number_of_frames
    float ms_per_frame() -> ms_per_frame
    float total_ms(int) -> total_ms
    int getSyncHeader() -> getSyncHeader
    java.lang.String layer_string() -> layer_string
    java.lang.String bitrate_string() -> bitrate_string
    int bitrate() -> bitrate
    int bitrate_instant() -> bitrate_instant
    java.lang.String sample_frequency_string() -> sample_frequency_string
    java.lang.String mode_string() -> mode_string
    java.lang.String version_string() -> version_string
    int number_of_subbands() -> number_of_subbands
    int intensity_stereo_bound() -> intensity_stereo_bound
javazoom.jl.decoder.InputStreamSource -> javazoom.jl.decoder.InputStreamSource:
    java.io.InputStream in -> in
    int read(byte[],int,int) -> read
    boolean willReadBlock() -> willReadBlock
    boolean isSeekable() -> isSeekable
    long tell() -> tell
    long seek(long) -> seek
    long length() -> length
javazoom.jl.decoder.JavaLayerError -> javazoom.jl.decoder.JavaLayerError:
javazoom.jl.decoder.JavaLayerErrors -> javazoom.jl.decoder.JavaLayerErrors:
    int BITSTREAM_ERROR -> BITSTREAM_ERROR
    int DECODER_ERROR -> DECODER_ERROR
javazoom.jl.decoder.JavaLayerException -> javazoom.jl.decoder.JavaLayerException:
    java.lang.Throwable exception -> exception
    java.lang.Throwable getException() -> getException
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
javazoom.jl.decoder.JavaLayerHook -> javazoom.jl.decoder.JavaLayerHook:
    java.io.InputStream getResourceAsStream(java.lang.String) -> getResourceAsStream
javazoom.jl.decoder.JavaLayerUtils -> javazoom.jl.decoder.JavaLayerUtils:
    javazoom.jl.decoder.JavaLayerHook hook -> hook
    java.lang.Object deserialize(java.io.InputStream,java.lang.Class) -> deserialize
    java.lang.Object deserialize(java.io.InputStream) -> deserialize
    java.lang.Object deserializeArray(java.io.InputStream,java.lang.Class,int) -> deserializeArray
    java.lang.Object deserializeArrayResource(java.lang.String,java.lang.Class,int) -> deserializeArrayResource
    void serialize(java.io.OutputStream,java.lang.Object) -> serialize
    void setHook(javazoom.jl.decoder.JavaLayerHook) -> setHook
    javazoom.jl.decoder.JavaLayerHook getHook() -> getHook
    java.io.InputStream getResourceAsStream(java.lang.String) -> getResourceAsStream
javazoom.jl.decoder.LayerIDecoder -> javazoom.jl.decoder.LayerIDecoder:
    javazoom.jl.decoder.Bitstream stream -> stream
    javazoom.jl.decoder.Header header -> header
    javazoom.jl.decoder.SynthesisFilter filter1 -> filter1
    javazoom.jl.decoder.SynthesisFilter filter2 -> filter2
    javazoom.jl.decoder.Obuffer buffer -> buffer
    int which_channels -> which_channels
    int mode -> mode
    int num_subbands -> num_subbands
    javazoom.jl.decoder.LayerIDecoder$Subband[] subbands -> subbands
    javazoom.jl.decoder.Crc16 crc -> crc
    void create(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header,javazoom.jl.decoder.SynthesisFilter,javazoom.jl.decoder.SynthesisFilter,javazoom.jl.decoder.Obuffer,int) -> create
    void decodeFrame() -> decodeFrame
    void createSubbands() -> createSubbands
    void readAllocation() -> readAllocation
    void readScaleFactorSelection() -> readScaleFactorSelection
    void readScaleFactors() -> readScaleFactors
    void readSampleData() -> readSampleData
javazoom.jl.decoder.LayerIDecoder$Subband -> javazoom.jl.decoder.LayerIDecoder$Subband:
    float[] scalefactors -> scalefactors
    void read_allocation(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header,javazoom.jl.decoder.Crc16) -> read_allocation
    void read_scalefactor(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header) -> read_scalefactor
    boolean read_sampledata(javazoom.jl.decoder.Bitstream) -> read_sampledata
    boolean put_next_sample(int,javazoom.jl.decoder.SynthesisFilter,javazoom.jl.decoder.SynthesisFilter) -> put_next_sample
javazoom.jl.decoder.LayerIDecoder$SubbandLayer1 -> javazoom.jl.decoder.LayerIDecoder$SubbandLayer1:
    float[] table_factor -> table_factor
    float[] table_offset -> table_offset
    int subbandnumber -> subbandnumber
    int samplenumber -> samplenumber
    int allocation -> allocation
    float scalefactor -> scalefactor
    int samplelength -> samplelength
    float sample -> sample
    float factor -> factor
    float offset -> offset
    void read_allocation(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header,javazoom.jl.decoder.Crc16) -> read_allocation
    void read_scalefactor(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header) -> read_scalefactor
    boolean read_sampledata(javazoom.jl.decoder.Bitstream) -> read_sampledata
    boolean put_next_sample(int,javazoom.jl.decoder.SynthesisFilter,javazoom.jl.decoder.SynthesisFilter) -> put_next_sample
javazoom.jl.decoder.LayerIDecoder$SubbandLayer1IntensityStereo -> javazoom.jl.decoder.LayerIDecoder$SubbandLayer1IntensityStereo:
    float channel2_scalefactor -> channel2_scalefactor
    void read_allocation(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header,javazoom.jl.decoder.Crc16) -> read_allocation
    void read_scalefactor(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header) -> read_scalefactor
    boolean read_sampledata(javazoom.jl.decoder.Bitstream) -> read_sampledata
    boolean put_next_sample(int,javazoom.jl.decoder.SynthesisFilter,javazoom.jl.decoder.SynthesisFilter) -> put_next_sample
javazoom.jl.decoder.LayerIDecoder$SubbandLayer1Stereo -> javazoom.jl.decoder.LayerIDecoder$SubbandLayer1Stereo:
    int channel2_allocation -> channel2_allocation
    float channel2_scalefactor -> channel2_scalefactor
    int channel2_samplelength -> channel2_samplelength
    float channel2_sample -> channel2_sample
    float channel2_factor -> channel2_factor
    float channel2_offset -> channel2_offset
    void read_allocation(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header,javazoom.jl.decoder.Crc16) -> read_allocation
    void read_scalefactor(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header) -> read_scalefactor
    boolean read_sampledata(javazoom.jl.decoder.Bitstream) -> read_sampledata
    boolean put_next_sample(int,javazoom.jl.decoder.SynthesisFilter,javazoom.jl.decoder.SynthesisFilter) -> put_next_sample
javazoom.jl.decoder.LayerIIDecoder -> javazoom.jl.decoder.LayerIIDecoder:
    void createSubbands() -> createSubbands
    void readScaleFactorSelection() -> readScaleFactorSelection
javazoom.jl.decoder.LayerIIDecoder$SubbandLayer2 -> javazoom.jl.decoder.LayerIIDecoder$SubbandLayer2:
    float[] grouping_5bits -> grouping_5bits
    float[] grouping_7bits -> grouping_7bits
    float[] grouping_10bits -> grouping_10bits
    int[] table_ab1_codelength -> table_ab1_codelength
    float[][] table_ab1_groupingtables -> table_ab1_groupingtables
    float[] table_ab1_factor -> table_ab1_factor
    float[] table_ab1_c -> table_ab1_c
    float[] table_ab1_d -> table_ab1_d
    float[][] table_ab234_groupingtables -> table_ab234_groupingtables
    int[] table_ab2_codelength -> table_ab2_codelength
    float[] table_ab2_factor -> table_ab2_factor
    float[] table_ab2_c -> table_ab2_c
    float[] table_ab2_d -> table_ab2_d
    int[] table_ab3_codelength -> table_ab3_codelength
    float[] table_ab3_factor -> table_ab3_factor
    float[] table_ab3_c -> table_ab3_c
    float[] table_ab3_d -> table_ab3_d
    int[] table_ab4_codelength -> table_ab4_codelength
    float[] table_ab4_factor -> table_ab4_factor
    float[] table_ab4_c -> table_ab4_c
    float[] table_ab4_d -> table_ab4_d
    int[] table_cd_codelength -> table_cd_codelength
    float[][] table_cd_groupingtables -> table_cd_groupingtables
    float[] table_cd_factor -> table_cd_factor
    float[] table_cd_c -> table_cd_c
    float[] table_cd_d -> table_cd_d
    int subbandnumber -> subbandnumber
    int allocation -> allocation
    int scfsi -> scfsi
    float scalefactor1 -> scalefactor1
    float scalefactor2 -> scalefactor2
    float scalefactor3 -> scalefactor3
    int[] codelength -> codelength
    float[][] groupingtable -> groupingtable
    float[] factor -> factor
    int groupnumber -> groupnumber
    int samplenumber -> samplenumber
    float[] samples -> samples
    float[] c -> c
    float[] d -> d
    int get_allocationlength(javazoom.jl.decoder.Header) -> get_allocationlength
    void prepare_sample_reading(javazoom.jl.decoder.Header,int,int,float[],int[],float[],float[]) -> prepare_sample_reading
    void read_allocation(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header,javazoom.jl.decoder.Crc16) -> read_allocation
    void read_scalefactor_selection(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Crc16) -> read_scalefactor_selection
    void read_scalefactor(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header) -> read_scalefactor
    boolean read_sampledata(javazoom.jl.decoder.Bitstream) -> read_sampledata
    boolean put_next_sample(int,javazoom.jl.decoder.SynthesisFilter,javazoom.jl.decoder.SynthesisFilter) -> put_next_sample
javazoom.jl.decoder.LayerIIDecoder$SubbandLayer2IntensityStereo -> javazoom.jl.decoder.LayerIIDecoder$SubbandLayer2IntensityStereo:
    int channel2_scfsi -> channel2_scfsi
    float channel2_scalefactor1 -> channel2_scalefactor1
    float channel2_scalefactor2 -> channel2_scalefactor2
    float channel2_scalefactor3 -> channel2_scalefactor3
    void read_allocation(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header,javazoom.jl.decoder.Crc16) -> read_allocation
    void read_scalefactor_selection(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Crc16) -> read_scalefactor_selection
    void read_scalefactor(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header) -> read_scalefactor
    boolean read_sampledata(javazoom.jl.decoder.Bitstream) -> read_sampledata
    boolean put_next_sample(int,javazoom.jl.decoder.SynthesisFilter,javazoom.jl.decoder.SynthesisFilter) -> put_next_sample
javazoom.jl.decoder.LayerIIDecoder$SubbandLayer2Stereo -> javazoom.jl.decoder.LayerIIDecoder$SubbandLayer2Stereo:
    int channel2_allocation -> channel2_allocation
    int channel2_scfsi -> channel2_scfsi
    float channel2_scalefactor1 -> channel2_scalefactor1
    float channel2_scalefactor2 -> channel2_scalefactor2
    float channel2_scalefactor3 -> channel2_scalefactor3
    int[] channel2_codelength -> channel2_codelength
    float[] channel2_factor -> channel2_factor
    float[] channel2_samples -> channel2_samples
    float[] channel2_c -> channel2_c
    float[] channel2_d -> channel2_d
    void read_allocation(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header,javazoom.jl.decoder.Crc16) -> read_allocation
    void read_scalefactor_selection(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Crc16) -> read_scalefactor_selection
    void read_scalefactor(javazoom.jl.decoder.Bitstream,javazoom.jl.decoder.Header) -> read_scalefactor
    boolean read_sampledata(javazoom.jl.decoder.Bitstream) -> read_sampledata
    boolean put_next_sample(int,javazoom.jl.decoder.SynthesisFilter,javazoom.jl.decoder.SynthesisFilter) -> put_next_sample
javazoom.jl.decoder.LayerIIIDecoder -> javazoom.jl.decoder.LayerIIIDecoder:
    double d43 -> d43
    int[] scalefac_buffer -> scalefac_buffer
    int CheckSumHuff -> CheckSumHuff
    int[] is_1d -> is_1d
    float[][][] ro -> ro
    float[][][] lr -> lr
    float[] out_1d -> out_1d
    float[][] prevblck -> prevblck
    float[][] k -> k
    int[] nonzero -> nonzero
    javazoom.jl.decoder.Bitstream stream -> stream
    javazoom.jl.decoder.Header header -> header
    javazoom.jl.decoder.SynthesisFilter filter1 -> filter1
    javazoom.jl.decoder.SynthesisFilter filter2 -> filter2
    javazoom.jl.decoder.Obuffer buffer -> buffer
    int which_channels -> which_channels
    javazoom.jl.decoder.BitReserve br -> br
    javazoom.jl.decoder.LayerIIIDecoder$III_side_info_t si -> si
    javazoom.jl.decoder.LayerIIIDecoder$temporaire2[] III_scalefac_t -> III_scalefac_t
    javazoom.jl.decoder.LayerIIIDecoder$temporaire2[] scalefac -> scalefac
    int max_gr -> max_gr
    int frame_start -> frame_start
    int part2_start -> part2_start
    int channels -> channels
    int first_channel -> first_channel
    int last_channel -> last_channel
    int sfreq -> sfreq
    float[] samples1 -> samples1
    float[] samples2 -> samples2
    int[] new_slen -> new_slen
    int[] x -> x
    int[] y -> y
    int[] v -> v
    int[] w -> w
    int[] is_pos -> is_pos
    float[] is_ratio -> is_ratio
    float[] tsOutCopy -> tsOutCopy
    float[] rawout -> rawout
    int counter -> counter
    int SSLIMIT -> SSLIMIT
    int SBLIMIT -> SBLIMIT
    int[][] slen -> slen
    int[] pretab -> pretab
    javazoom.jl.decoder.LayerIIIDecoder$SBI[] sfBandIndex -> sfBandIndex
    float[] two_to_negative_half_pow -> two_to_negative_half_pow
    float[] t_43 -> t_43
    float[][] io -> io
    float[] TAN12 -> TAN12
    int[][] reorder_table -> reorder_table
    float[] cs -> cs
    float[] ca -> ca
    float[][] win -> win
    javazoom.jl.decoder.LayerIIIDecoder$Sftable sftable -> sftable
    int[][][] nr_of_sfb_block -> nr_of_sfb_block
    void seek_notify() -> seek_notify
    void decodeFrame() -> decodeFrame
    void decode() -> decode
    boolean get_side_info() -> get_side_info
    void get_scale_factors(int,int) -> get_scale_factors
    void get_LSF_scale_data(int,int) -> get_LSF_scale_data
    void get_LSF_scale_factors(int,int) -> get_LSF_scale_factors
    void huffman_decode(int,int) -> huffman_decode
    void i_stereo_k_values(int,int,int) -> i_stereo_k_values
    void dequantize_sample(float[][],int,int) -> dequantize_sample
    void reorder(float[][],int,int) -> reorder
    void stereo(int) -> stereo
    void antialias(int,int) -> antialias
    void hybrid(int,int) -> hybrid
    void do_downmix() -> do_downmix
    void inv_mdct(float[],float[],int) -> inv_mdct
    float[] create_t_43() -> create_t_43
    int[] reorder(int[]) -> reorder
javazoom.jl.decoder.LayerIIIDecoder$III_side_info_t -> javazoom.jl.decoder.LayerIIIDecoder$III_side_info_t:
    int main_data_begin -> main_data_begin
    int private_bits -> private_bits
    javazoom.jl.decoder.LayerIIIDecoder$temporaire[] ch -> ch
javazoom.jl.decoder.LayerIIIDecoder$SBI -> javazoom.jl.decoder.LayerIIIDecoder$SBI:
    int[] l -> l
    int[] s -> s
javazoom.jl.decoder.LayerIIIDecoder$Sftable -> javazoom.jl.decoder.LayerIIIDecoder$Sftable:
    int[] l -> l
    int[] s -> s
    javazoom.jl.decoder.LayerIIIDecoder this$0 -> this$0
javazoom.jl.decoder.LayerIIIDecoder$gr_info_s -> javazoom.jl.decoder.LayerIIIDecoder$gr_info_s:
    int part2_3_length -> part2_3_length
    int big_values -> big_values
    int global_gain -> global_gain
    int scalefac_compress -> scalefac_compress
    int window_switching_flag -> window_switching_flag
    int block_type -> block_type
    int mixed_block_flag -> mixed_block_flag
    int[] table_select -> table_select
    int[] subblock_gain -> subblock_gain
    int region0_count -> region0_count
    int region1_count -> region1_count
    int preflag -> preflag
    int scalefac_scale -> scalefac_scale
    int count1table_select -> count1table_select
javazoom.jl.decoder.LayerIIIDecoder$temporaire -> javazoom.jl.decoder.LayerIIIDecoder$temporaire:
    int[] scfsi -> scfsi
    javazoom.jl.decoder.LayerIIIDecoder$gr_info_s[] gr -> gr
javazoom.jl.decoder.LayerIIIDecoder$temporaire2 -> javazoom.jl.decoder.LayerIIIDecoder$temporaire2:
    int[] l -> l
    int[][] s -> s
javazoom.jl.decoder.Manager -> javazoom.jl.decoder.Manager:
    void addControl(javazoom.jl.decoder.Control) -> addControl
    void removeControl(javazoom.jl.decoder.Control) -> removeControl
    void removeAll() -> removeAll
javazoom.jl.decoder.Obuffer -> javazoom.jl.decoder.Obuffer:
    int OBUFFERSIZE -> OBUFFERSIZE
    int MAXCHANNELS -> MAXCHANNELS
    void append(int,short) -> append
    void appendSamples(int,float[]) -> appendSamples
    short clip(float) -> clip
    void write_buffer(int) -> write_buffer
    void close() -> close
    void clear_buffer() -> clear_buffer
    void set_stop_flag() -> set_stop_flag
javazoom.jl.decoder.OutputChannels -> javazoom.jl.decoder.OutputChannels:
    int BOTH_CHANNELS -> BOTH_CHANNELS
    int LEFT_CHANNEL -> LEFT_CHANNEL
    int RIGHT_CHANNEL -> RIGHT_CHANNEL
    int DOWNMIX_CHANNELS -> DOWNMIX_CHANNELS
    javazoom.jl.decoder.OutputChannels LEFT -> LEFT
    javazoom.jl.decoder.OutputChannels RIGHT -> RIGHT
    javazoom.jl.decoder.OutputChannels BOTH -> BOTH
    javazoom.jl.decoder.OutputChannels DOWNMIX -> DOWNMIX
    int outputChannels -> outputChannels
    javazoom.jl.decoder.OutputChannels fromInt(int) -> fromInt
    int getChannelsOutputCode() -> getChannelsOutputCode
    int getChannelCount() -> getChannelCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javazoom.jl.decoder.SampleBuffer -> javazoom.jl.decoder.SampleBuffer:
    short[] buffer -> buffer
    int[] bufferp -> bufferp
    int channels -> channels
    int frequency -> frequency
    int getChannelCount() -> getChannelCount
    int getSampleFrequency() -> getSampleFrequency
    short[] getBuffer() -> getBuffer
    int getBufferLength() -> getBufferLength
    void append(int,short) -> append
    void appendSamples(int,float[]) -> appendSamples
    void write_buffer(int) -> write_buffer
    void close() -> close
    void clear_buffer() -> clear_buffer
    void set_stop_flag() -> set_stop_flag
javazoom.jl.decoder.Source -> javazoom.jl.decoder.Source:
    long LENGTH_UNKNOWN -> LENGTH_UNKNOWN
    int read(byte[],int,int) -> read
    boolean willReadBlock() -> willReadBlock
    boolean isSeekable() -> isSeekable
    long length() -> length
    long tell() -> tell
    long seek(long) -> seek
javazoom.jl.decoder.SynthesisFilter -> javazoom.jl.decoder.SynthesisFilter:
    float[] v1 -> v1
    float[] v2 -> v2
    float[] actual_v -> actual_v
    int actual_write_pos -> actual_write_pos
    float[] samples -> samples
    int channel -> channel
    float scalefactor -> scalefactor
    float[] eq -> eq
    float[] _tmpOut -> _tmpOut
    double MY_PI -> MY_PI
    float cos1_64 -> cos1_64
    float cos3_64 -> cos3_64
    float cos5_64 -> cos5_64
    float cos7_64 -> cos7_64
    float cos9_64 -> cos9_64
    float cos11_64 -> cos11_64
    float cos13_64 -> cos13_64
    float cos15_64 -> cos15_64
    float cos17_64 -> cos17_64
    float cos19_64 -> cos19_64
    float cos21_64 -> cos21_64
    float cos23_64 -> cos23_64
    float cos25_64 -> cos25_64
    float cos27_64 -> cos27_64
    float cos29_64 -> cos29_64
    float cos31_64 -> cos31_64
    float cos1_32 -> cos1_32
    float cos3_32 -> cos3_32
    float cos5_32 -> cos5_32
    float cos7_32 -> cos7_32
    float cos9_32 -> cos9_32
    float cos11_32 -> cos11_32
    float cos13_32 -> cos13_32
    float cos15_32 -> cos15_32
    float cos1_16 -> cos1_16
    float cos3_16 -> cos3_16
    float cos5_16 -> cos5_16
    float cos7_16 -> cos7_16
    float cos1_8 -> cos1_8
    float cos3_8 -> cos3_8
    float cos1_4 -> cos1_4
    float[] d -> d
    float[][] d16 -> d16
    void setEQ(float[]) -> setEQ
    void reset() -> reset
    void input_sample(float,int) -> input_sample
    void input_samples(float[]) -> input_samples
    void compute_new_v() -> compute_new_v
    void compute_new_v_old() -> compute_new_v_old
    void compute_pcm_samples0(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples0
    void compute_pcm_samples1(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples1
    void compute_pcm_samples2(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples2
    void compute_pcm_samples3(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples3
    void compute_pcm_samples4(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples4
    void compute_pcm_samples5(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples5
    void compute_pcm_samples6(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples6
    void compute_pcm_samples7(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples7
    void compute_pcm_samples8(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples8
    void compute_pcm_samples9(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples9
    void compute_pcm_samples10(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples10
    void compute_pcm_samples11(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples11
    void compute_pcm_samples12(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples12
    void compute_pcm_samples13(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples13
    void compute_pcm_samples14(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples14
    void compute_pcm_samples15(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples15
    void compute_pcm_samples(javazoom.jl.decoder.Obuffer) -> compute_pcm_samples
    void calculate_pcm_samples(javazoom.jl.decoder.Obuffer) -> calculate_pcm_samples
    float[] load_d() -> load_d
    float[][] splitArray(float[],int) -> splitArray
    float[] subArray(float[],int,int) -> subArray
javazoom.jl.decoder.huffcodetab -> javazoom.jl.decoder.huffcodetab:
    int MXOFF -> MXOFF
    int HTN -> HTN
    char tablename0 -> tablename0
    char tablename1 -> tablename1
    char tablename2 -> tablename2
    int xlen -> xlen
    int ylen -> ylen
    int linbits -> linbits
    int linmax -> linmax
    int ref -> ref
    int[] table -> table
    int[] hlen -> hlen
    int[][] val -> val
    int treelen -> treelen
    int[][] ValTab0 -> ValTab0
    int[][] ValTab1 -> ValTab1
    int[][] ValTab2 -> ValTab2
    int[][] ValTab3 -> ValTab3
    int[][] ValTab4 -> ValTab4
    int[][] ValTab5 -> ValTab5
    int[][] ValTab6 -> ValTab6
    int[][] ValTab7 -> ValTab7
    int[][] ValTab8 -> ValTab8
    int[][] ValTab9 -> ValTab9
    int[][] ValTab10 -> ValTab10
    int[][] ValTab11 -> ValTab11
    int[][] ValTab12 -> ValTab12
    int[][] ValTab13 -> ValTab13
    int[][] ValTab14 -> ValTab14
    int[][] ValTab15 -> ValTab15
    int[][] ValTab16 -> ValTab16
    int[][] ValTab24 -> ValTab24
    int[][] ValTab32 -> ValTab32
    int[][] ValTab33 -> ValTab33
    javazoom.jl.decoder.huffcodetab[] ht -> ht
    int[] bitbuf -> bitbuf
    int huffman_decoder(javazoom.jl.decoder.huffcodetab,int[],int[],int[],int[],javazoom.jl.decoder.BitReserve) -> huffman_decoder
    void inithuff() -> inithuff
javazoom.jl.player.AudioDevice -> javazoom.jl.player.AudioDevice:
    void open(javazoom.jl.decoder.Decoder) -> open
    boolean isOpen() -> isOpen
    void write(short[],int,int) -> write
    void close() -> close
    void flush() -> flush
    int getPosition() -> getPosition
javazoom.jl.player.AudioDeviceBase -> javazoom.jl.player.AudioDeviceBase:
    boolean open -> open
    javazoom.jl.decoder.Decoder decoder -> decoder
    void open(javazoom.jl.decoder.Decoder) -> open
    void openImpl() -> openImpl
    void setOpen(boolean) -> setOpen
    boolean isOpen() -> isOpen
    void close() -> close
    void closeImpl() -> closeImpl
    void write(short[],int,int) -> write
    void writeImpl(short[],int,int) -> writeImpl
    void flush() -> flush
    void flushImpl() -> flushImpl
    javazoom.jl.decoder.Decoder getDecoder() -> getDecoder
javazoom.jl.player.AudioDeviceFactory -> javazoom.jl.player.AudioDeviceFactory:
    javazoom.jl.player.AudioDevice createAudioDevice() -> createAudioDevice
    javazoom.jl.player.AudioDevice instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
javazoom.jl.player.FactoryRegistry -> javazoom.jl.player.FactoryRegistry:
    javazoom.jl.player.FactoryRegistry instance -> instance
    java.util.Hashtable factories -> factories
    javazoom.jl.player.FactoryRegistry systemRegistry() -> systemRegistry
    void addFactory(javazoom.jl.player.AudioDeviceFactory) -> addFactory
    void removeFactoryType(java.lang.Class) -> removeFactoryType
    void removeFactory(javazoom.jl.player.AudioDeviceFactory) -> removeFactory
    javazoom.jl.player.AudioDevice createAudioDevice() -> createAudioDevice
    javazoom.jl.player.AudioDeviceFactory[] getFactoriesPriority() -> getFactoriesPriority
    void registerDefaultFactories() -> registerDefaultFactories
javazoom.jl.player.JavaSoundAudioDevice -> javazoom.jl.player.JavaSoundAudioDevice:
    javax.sound.sampled.SourceDataLine source -> source
    javax.sound.sampled.AudioFormat fmt -> fmt
    byte[] byteBuf -> byteBuf
    void setAudioFormat(javax.sound.sampled.AudioFormat) -> setAudioFormat
    javax.sound.sampled.AudioFormat getAudioFormat() -> getAudioFormat
    javax.sound.sampled.DataLine$Info getSourceLineInfo() -> getSourceLineInfo
    void open(javax.sound.sampled.AudioFormat) -> open
    void openImpl() -> openImpl
    void createSource() -> createSource
    int millisecondsToBytes(javax.sound.sampled.AudioFormat,int) -> millisecondsToBytes
    void closeImpl() -> closeImpl
    void writeImpl(short[],int,int) -> writeImpl
    byte[] getByteArray(int) -> getByteArray
    byte[] toByteArray(short[],int,int) -> toByteArray
    void flushImpl() -> flushImpl
    int getPosition() -> getPosition
    void test() -> test
javazoom.jl.player.JavaSoundAudioDeviceFactory -> javazoom.jl.player.JavaSoundAudioDeviceFactory:
    boolean tested -> tested
    java.lang.String DEVICE_CLASS_NAME -> DEVICE_CLASS_NAME
    javazoom.jl.player.AudioDevice createAudioDevice() -> createAudioDevice
    javazoom.jl.player.JavaSoundAudioDevice createAudioDeviceImpl() -> createAudioDeviceImpl
    void testAudioDevice() -> testAudioDevice
javazoom.jl.player.NullAudioDevice -> javazoom.jl.player.NullAudioDevice:
    int getPosition() -> getPosition
javazoom.jl.player.Player -> javazoom.jl.player.Player:
    int frame -> frame
    javazoom.jl.decoder.Bitstream bitstream -> bitstream
    javazoom.jl.decoder.Decoder decoder -> decoder
    javazoom.jl.player.AudioDevice audio -> audio
    boolean closed -> closed
    boolean complete -> complete
    int lastPosition -> lastPosition
    void play() -> play
    boolean play(int) -> play
    void close() -> close
    boolean isComplete() -> isComplete
    int getPosition() -> getPosition
    boolean decodeFrame() -> decodeFrame
javazoom.jl.player.PlayerApplet -> javazoom.jl.player.PlayerApplet:
    java.lang.String AUDIO_PARAMETER -> AUDIO_PARAMETER
    javazoom.jl.player.Player player -> player
    java.lang.Thread playerThread -> playerThread
    java.lang.String fileName -> fileName
    javazoom.jl.player.AudioDevice getAudioDevice() -> getAudioDevice
    java.io.InputStream getAudioStream() -> getAudioStream
    java.lang.String getAudioFileName() -> getAudioFileName
    java.net.URL getAudioURL() -> getAudioURL
    void setFileName(java.lang.String) -> setFileName
    java.lang.String getFileName() -> getFileName
    void stopPlayer() -> stopPlayer
    void play(java.io.InputStream,javazoom.jl.player.AudioDevice) -> play
    java.lang.Thread createPlayerThread() -> createPlayerThread
    void init() -> init
    void start() -> start
    void stop() -> stop
    void destroy() -> destroy
    void run() -> run
javazoom.jl.player.advanced.AdvancedPlayer -> javazoom.jl.player.advanced.AdvancedPlayer:
    javazoom.jl.decoder.Bitstream bitstream -> bitstream
    javazoom.jl.decoder.Decoder decoder -> decoder
    javazoom.jl.player.AudioDevice audio -> audio
    boolean closed -> closed
    boolean complete -> complete
    int lastPosition -> lastPosition
    javazoom.jl.player.advanced.PlaybackListener listener -> listener
    void play() -> play
    boolean play(int) -> play
    void close() -> close
    boolean decodeFrame() -> decodeFrame
    boolean skipFrame() -> skipFrame
    boolean play(int,int) -> play
    javazoom.jl.player.advanced.PlaybackEvent createEvent(int) -> createEvent
    javazoom.jl.player.advanced.PlaybackEvent createEvent(javazoom.jl.player.AudioDevice,int) -> createEvent
    void setPlayBackListener(javazoom.jl.player.advanced.PlaybackListener) -> setPlayBackListener
    javazoom.jl.player.advanced.PlaybackListener getPlayBackListener() -> getPlayBackListener
    void stop() -> stop
javazoom.jl.player.advanced.PlaybackEvent -> javazoom.jl.player.advanced.PlaybackEvent:
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    javazoom.jl.player.advanced.AdvancedPlayer source -> source
    int frame -> frame
    int id -> id
    int getId() -> getId
    void setId(int) -> setId
    int getFrame() -> getFrame
    void setFrame(int) -> setFrame
    javazoom.jl.player.advanced.AdvancedPlayer getSource() -> getSource
    void setSource(javazoom.jl.player.advanced.AdvancedPlayer) -> setSource
javazoom.jl.player.advanced.PlaybackListener -> javazoom.jl.player.advanced.PlaybackListener:
    void playbackStarted(javazoom.jl.player.advanced.PlaybackEvent) -> playbackStarted
    void playbackFinished(javazoom.jl.player.advanced.PlaybackEvent) -> playbackFinished
javazoom.jl.player.advanced.jlap -> javazoom.jl.player.advanced.jlap:
    void main(java.lang.String[]) -> main
    void play(java.lang.String) -> play
    void showUsage() -> showUsage
    javazoom.jl.player.advanced.AdvancedPlayer playMp3(java.io.File,javazoom.jl.player.advanced.PlaybackListener) -> playMp3
    javazoom.jl.player.advanced.AdvancedPlayer playMp3(java.io.File,int,int,javazoom.jl.player.advanced.PlaybackListener) -> playMp3
    javazoom.jl.player.advanced.AdvancedPlayer playMp3(java.io.InputStream,int,int,javazoom.jl.player.advanced.PlaybackListener) -> playMp3
javazoom.jl.player.advanced.jlap$1 -> javazoom.jl.player.advanced.jlap$1:
    javazoom.jl.player.advanced.AdvancedPlayer val$player -> val$player
    int val$start -> val$start
    int val$end -> val$end
    void run() -> run
javazoom.jl.player.advanced.jlap$InfoListener -> javazoom.jl.player.advanced.jlap$InfoListener:
    javazoom.jl.player.advanced.jlap this$0 -> this$0
    void playbackStarted(javazoom.jl.player.advanced.PlaybackEvent) -> playbackStarted
    void playbackFinished(javazoom.jl.player.advanced.PlaybackEvent) -> playbackFinished
javazoom.jl.player.jlp -> javazoom.jl.player.jlp:
    java.lang.String fFilename -> fFilename
    boolean remote -> remote
    void main(java.lang.String[]) -> main
    javazoom.jl.player.jlp createInstance(java.lang.String[]) -> createInstance
    void init(java.lang.String) -> init
    boolean parseArgs(java.lang.String[]) -> parseArgs
    void showUsage() -> showUsage
    void play() -> play
    java.io.InputStream getURLInputStream() -> getURLInputStream
    java.io.InputStream getInputStream() -> getInputStream
    javazoom.jl.player.AudioDevice getAudioDevice() -> getAudioDevice
